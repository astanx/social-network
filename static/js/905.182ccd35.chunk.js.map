{"version":3,"file":"static/js/905.182ccd35.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/ChatPage/ChatPage.module.css?e0ec","components/ChatPage/ChatPage.tsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chatContainer\":\"ChatPage_chatContainer__aVU5c\"};","import React, { useEffect, useState } from \"react\";\r\nimport SendMessage from \"../Messages/Dialog/SendMessage/SendMessage.tsx\";\r\nimport UserMessage from \"../UserMessage/UserMessage.tsx\";\r\nimport Preloader from \"../UI/Preloader/Preloader.jsx\";\r\nimport withAuth from \"../hoc/withAuth.tsx\";\r\nimport classes from './ChatPage.module.css'\r\n\r\nexport type ChatMessageType = {\r\n  message: string;\r\n  photo: string;\r\n  userId: number;\r\n  userName: string;\r\n  timestamp: number;\r\n};\r\n\r\nconst ChatPage = () => {\r\n  const [messagesData, setMessagesData] = useState<ChatMessageType[]>([]);\r\n  const [ws, setWs] = useState<WebSocket | null>(null);\r\n  const [isFetching, setIsFetching] = useState(true);\r\n  function connect() {\r\n    const websocket = new WebSocket(\r\n      \"wss://social-network.samuraijs.com/handlers/ChatHandler.ashx\"\r\n    );\r\n    \r\n    const handleClose = (e) => {\r\n      setTimeout(function () {\r\n        connect();\r\n      }, 1000);\r\n    };\r\n    websocket.onclose = handleClose;\r\n    websocket.onerror = (e) => {\r\n      console.error(\"WebSocket error:\", e);\r\n   };\r\n    return websocket;\r\n  }\r\n  useEffect(() => {\r\n    const handleMessage = (e: MessageEvent) => {\r\n\r\n      const newMessages: ChatMessageType[] = JSON.parse(e.data)\r\n      setMessagesData((prevMessages) => [...prevMessages, ...newMessages]);\r\n      setIsFetching(false);\r\n    };\r\n    ws?.addEventListener('message', handleMessage)\r\n  }, [ws])\r\n  useEffect(() => {\r\n    if (!ws) {\r\n      console.log('connected');\r\n      \r\n      const websocket = connect();\r\n      setWs(websocket);\r\n    }\r\n  \r\n    return () => {\r\n      setIsFetching(true);\r\n      ws?.close();\r\n    };\r\n  }, [ws]);\r\n\r\n  const messages = messagesData.map((message, index) => (\r\n    <UserMessage\r\n      isDeletable={false}\r\n      message={message.message}\r\n      name={message.userName}\r\n      logo={message.photo}\r\n      id={message.userId}\r\n      key={`${message.userId}-${message.timestamp}-${index}`}\r\n    />\r\n  ));\r\n\r\n  return isFetching ? (\r\n    <Preloader />\r\n  ) : (\r\n    <div>\r\n      <div className={classes.chatContainer}>{messages.length > 0 ? messages : <p>No messages yet.</p>}</div>\r\n      <SendMessage ws={ws} friendId={0} login={null} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuth(ChatPage);\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: {\n      color: (theme.vars || theme).palette.background.default,\n      ...(theme.vars ? {\n        backgroundColor: theme.vars.palette.Avatar.defaultBg\n      } : {\n        backgroundColor: theme.palette.grey[400],\n        ...theme.applyStyles('dark', {\n          backgroundColor: theme.palette.grey[600]\n        })\n      })\n    }\n  }]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded({\n    ...imgProps,\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = {\n    ...props,\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  };\n  // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: {\n          ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, {\n      ...imgSlotProps\n    });\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["withAuth","ChatPage","messagesData","setMessagesData","useState","ws","setWs","isFetching","setIsFetching","connect","websocket","WebSocket","onclose","e","setTimeout","onerror","console","error","useEffect","addEventListener","newMessages","JSON","parse","data","prevMessages","log","close","messages","map","message","index","_jsx","UserMessage","isDeletable","name","userName","logo","photo","id","userId","timestamp","Preloader","_jsxs","children","className","classes","length","SendMessage","friendId","login","createSvgIcon","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","AvatarRoot","styled","overridesResolver","props","styles","ownerState","root","variant","colorDefault","memoTheme","_ref","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","style","vars","shape","color","palette","background","default","backgroundColor","Avatar","defaultBg","grey","applyStyles","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","React","inProps","ref","useDefaultProps","alt","childrenProp","component","slots","slotProps","imgProps","sizes","src","srcSet","other","loaded","_ref2","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","srcset","useLoaded","hasImg","hasImgNotFailing","composeClasses","useUtilityClasses","ImgSlot","imgSlotProps","useSlot","elementType","externalForwardedProps","additionalProps","as","clsx","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","getCardUtilityClass","CardRoot","Paper","raised","elevation","undefined"],"sourceRoot":""}