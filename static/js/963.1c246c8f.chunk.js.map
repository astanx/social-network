{"version":3,"file":"static/js/963.1c246c8f.chunk.js","mappings":"wIACA,QAA8B,iC,+DCwB9B,MAmCA,EAnCqDA,IACnD,MAAMC,GACJC,EAAAA,EAAAA,OACI,SACJC,EAAQ,aACRC,EAAY,MACZC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAwB,CAAC,GAY7B,OACEC,EAAAA,EAAAA,MAAA,QAAMC,SAAUN,GAXFO,IACVX,EAAMY,IACRZ,EAAMY,GAAGC,KAAKF,EAAKG,aACnBT,KAEmC,KAA5BM,EAAKG,YAAYC,SACxBd,GAASe,EAAAA,EAAAA,IAAYhB,EAAMiB,SAAUN,EAAKG,cAC1CT,IACF,IAGsCa,UAAWC,EAAoBC,SAAA,EACnEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CACRC,QAAShB,EAAOO,YAChBU,GAAG,iBACHC,MAAM,UACNC,QAAQ,SACRC,aAAa,SACTxB,EAAS,cAAe,CAAEyB,UAAU,OAE1CP,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACH,QAAQ,YAAYI,KAAK,SAAQV,SAAC,WACrC,C,6DCvDX,QAA0B,0BCA1B,EAA8B,iC,iCCU9B,MAeA,EAfqDpB,IACnD,MAGM+B,GAHgBC,MAAMC,QAAQjC,EAAMkC,cACtClC,EAAMkC,aACN,CAAClC,EAAMkC,eACqBC,KAAKC,IACnCf,EAAAA,EAAAA,KAACgB,EAAAA,EAAW,CACVC,KAAM,OACNC,KAAMH,EAAQI,SACdC,KAAML,EAAQM,OAAOC,MAAQP,EAAQM,OAAOC,MAAQF,EACpDjB,GAAIY,EAAQZ,IACPY,EAAQZ,MAEjB,OAAOH,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAoBC,SAAEW,GAAgB,ECtB/D,GAAiB,E,4CCgBjB,MAmCA,EAnC2C/B,IAAW,IAAD4C,EACnD,MAAMC,EAASC,EAAQ,OACjB,OAAEC,IAAWC,EAAAA,EAAAA,KAEbC,EACJjD,EAAMkD,YACNlD,EAAMkD,WAAWC,OACjBnD,EAAMkD,WAAWC,MAAMC,OAAS,EACZ,QADaR,EAC7B5C,EAAMkD,kBAAU,IAAAN,OAAA,EAAhBA,EAAkBO,MAAMhB,KAAKkB,IAC3BhC,EAAAA,EAAAA,KAACgB,EAAAA,EAAW,CACZiB,aAAa,EACbC,OAAQF,EAAOE,OACfnB,QAASiB,EAAOG,KAChBjB,KAAMc,EAAOI,WACbhB,KAAMA,EACNiB,UAAWL,EAAO7B,GAClBA,GAAI6B,EAAOM,SAEXC,cAAeA,EAAAA,GACfC,KAAMhB,EAAOiB,IAAIT,EAAOU,SAASC,GAAG,iBAAiBC,OAAO,qBAFvDZ,EAAO7B,MAKd,KAEN,OAAOuB,GACLtC,EAAAA,EAAAA,MAAA,OAAAW,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAQiB,QAAQhB,SAAE6B,KAClC5B,EAAAA,EAAAA,KAAC6C,EAAAA,EAAW,CACVjD,SAAUkD,OAAOpB,GACjBqB,MAAOpE,EAAMoE,WAGf,IAAI,E,wBChCV,MA8BA,GAAeC,E,QAAAA,IA9BYC,KACzB,MAAM,OAAEvB,IAAWC,EAAAA,EAAAA,KACbuB,GAAYC,EAAAA,EAAAA,KAAaC,GAAoBA,EAAEL,MAAMG,YACrDG,GAAaF,EAAAA,EAAAA,KAAaC,GAAoBA,EAAEE,SAASD,aACzDE,GAAeJ,EAAAA,EAAAA,KAClBC,GAAoBA,EAAEE,SAASzC,eAE5B2C,GAAaL,EAAAA,EAAAA,KAAaC,GAAoBA,EAAEE,SAASzB,aACzDkB,GAAQI,EAAAA,EAAAA,KAAaC,GAAoBA,EAAEL,MAAMA,QACjDnE,GACJC,EAAAA,EAAAA,MAUF,OATA4E,EAAAA,EAAAA,YAAU,KACJP,IACFtE,GAAS8E,EAAAA,EAAAA,OACLhC,GACF9C,GAAS+E,EAAAA,EAAAA,IAAUb,OAAOpB,KAE9B,GACC,CAACA,IAEG2B,GACLrD,EAAAA,EAAAA,KAAC4D,EAAAA,EAAS,KAEVxE,EAAAA,EAAAA,MAAA,OAAKS,UAAWC,EAAgBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAC6D,EAAW,CAAChD,aAAc0C,KAC3BvD,EAAAA,EAAAA,KAAC4B,EAAM,CAACmB,MAAOA,EAAOlB,WAAY2B,MAErC,G,qJChBH,MAgDA,EAhDqD7E,IACnD,MAAM0D,EAAY1D,EAAM0D,WAAa,EAC/BzD,GACJC,EAAAA,EAAAA,MAEIiF,EAAOA,KACX1E,EAAAA,EAAAA,MAAC2E,EAAAA,EAAI,CAAC1D,QAAQ,WAAW2D,MAAO,CAAEC,QAAS,OAAQC,aAAc,QAASnE,SAAA,EACxEC,EAAAA,EAAAA,KAACmE,EAAAA,EAAM,CAACC,IAAKzF,EAAMyC,KAAMiD,GAAI,CAAEC,MAAO,GAAIC,OAAQ,OAClDnF,EAAAA,EAAAA,MAACoF,EAAAA,EAAW,CAACR,MAAO,CAAES,KAAM,KAAM1E,SAAA,EAChCX,EAAAA,EAAAA,MAAA,OAAK4E,MAAO,CAAEC,QAAS,OAAQS,eAAgB,iBAAkB3E,SAAA,EAC/DX,EAAAA,EAAAA,MAAA,OAAAW,SAAA,EACEC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAU,CAACtE,QAAQ,YAAWN,SAAEpB,EAAMuC,QACvClB,EAAAA,EAAAA,KAAC2E,EAAAA,EAAU,CAACtE,QAAQ,QAAQuE,MAAM,gBAAe7E,SAAEpB,EAAM6D,UAE1D7D,EAAMsD,cACLjC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAU,CACTC,KAAK,QACLC,QAASA,IAAMnG,GAAS2D,EAAAA,EAAAA,IAAcF,IAAYtC,UAElDC,EAAAA,EAAAA,KAACgF,EAAAA,EAAU,CAACC,SAAS,gBAI3B7F,EAAAA,EAAAA,MAAA,OAAK4E,MAAO,CAAEC,QAAS,OAAQiB,WAAY,SAAUC,UAAW,OAAQpF,SAAA,EACtEC,EAAAA,EAAAA,KAAC2E,EAAAA,EAAU,CAACtE,QAAQ,QAAQ2D,MAAO,CAAES,KAAM,KAAM1E,SAAEpB,EAAMoC,UACxDpC,EAAM0D,YACLrC,EAAAA,EAAAA,KAAA,OACEgE,MAAO,CAAEM,MAAO,OAAQc,WAAY,QACpChB,IAAKzF,EAAMuD,O,80gBACXmD,IAAK1G,EAAMuD,OAAS,SAAW,oBAQ3C,OAAOvD,EAAMsC,MACXjB,EAAAA,EAAAA,KAACsF,EAAAA,GAAO,CAACC,GAAI,aAAa5G,EAAMwB,KAAM4E,QAASA,IAAMnG,GAAS+E,EAAAA,EAAAA,IAAUhF,EAAMwB,KAAKJ,UACjFC,EAAAA,EAAAA,KAAC8D,EAAI,OAGP9D,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAC8D,EAAI,KAER,C,6ECpEH,MAgBA,EAhBkB0B,GAES7G,IACvB,MAAMuE,GAAYC,EAAAA,EAAAA,KAAaC,GAAoBA,EAAEL,MAAMG,YAErDuC,GAAWC,EAAAA,EAAAA,MAMjB,OALAjC,EAAAA,EAAAA,YAAU,KACHP,GACHuC,EAAS,SACX,GACC,CAACvC,EAAWuC,KACRzF,EAAAA,EAAAA,KAACwF,EAAgB,IAAK7G,GAAS,C","sources":["webpack://social_network/./src/components/Messages/Dialog/SendMessage/SendMessage.module.css?3cb9","components/Messages/Dialog/SendMessage/SendMessage.tsx","webpack://social_network/./src/components/Messages/Messages.module.css?8e7e","webpack://social_network/./src/components/Messages/MessageList/MessageList.module.css?ae33","components/Messages/MessageList/MessageList.tsx","components/Messages/Dialog/Dialog.module.css","components/Messages/Dialog/Dialog.tsx","components/Messages/Messages.tsx","components/UserMessage/UserMessage.tsx","components/hoc/withAuth.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SendMessage\":\"SendMessage_SendMessage__Yz56f\"};","import React, { useState } from \"react\";\r\nimport classes from \"./SendMessage.module.css\";\r\n\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  MessagesActionsTypes,\r\n  sendMessage,\r\n} from \"../../../../redux/messagesReducer.ts\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../../../redux/storeRedux.ts\";\r\nimport { TextField } from \"@mui/material\";\r\n\r\ntype FormValuesType = {\r\n  messageText: string;\r\n};\r\n\r\ntype SendMessagePropsType = {\r\n  friendId: number;\r\n  login: string | null;\r\n  ws: any\r\n};\r\n\r\nconst SendMessage: React.FC<SendMessagePropsType> = (props) => {\r\n  const dispatch: ThunkDispatch<AppStateType, void, MessagesActionsTypes> =\r\n    useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm<FormValuesType>({});\r\n\r\n  const submit = (data) => {\r\n    if (props.ws) {\r\n      props.ws.send(data.messageText)\r\n      reset()\r\n    }\r\n    else if (data.messageText.trim() !== \"\") {\r\n      dispatch(sendMessage(props.friendId, data.messageText));\r\n      reset();\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className={classes.SendMessage}>\r\n      <TextField\r\n        error={!!errors.messageText}\r\n        id=\"outlined-basic\"\r\n        label=\"Message\"\r\n        variant=\"filled\"\r\n        autoComplete=\"off\"\r\n        {...register(\"messageText\", { required: true })}\r\n      />\r\n      <Button variant=\"contained\" type=\"submit\">Send</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Messages_content__wNDBY\",\"active\":\"Messages_active__pElvi\"};","// extracted by mini-css-extract-plugin\nexport default {\"MessageList\":\"MessageList_MessageList__LxXPb\"};","import React from \"react\";\r\nimport classes from \"./MessageList.module.css\";\r\nimport UserMessage from \"../../UserMessage/UserMessage.tsx\";\r\n\r\nimport logo from './../../UI/Images/logo.png'\r\nimport { MessagesListDataType } from \"../../../redux/types/types.ts\";\r\n\r\ntype MessageListPropsType = {\r\n  MessagesData: Array<MessagesListDataType> | MessagesListDataType\r\n}\r\n\r\nconst MessageList: React.FC<MessageListPropsType> = (props) => {\r\n  const messagesArray = Array.isArray(props.MessagesData) ? \r\n      props.MessagesData : \r\n      [props.MessagesData];\r\n  const Messsages = messagesArray.map((message) => (\r\n    <UserMessage\r\n      link={\"true\"}\r\n      name={message.userName}\r\n      logo={message.photos.small ? message.photos.small : logo}\r\n      id={message.id}\r\n      key={message.id} />\r\n  ));\r\n  return <div className={classes.MessageList}>{Messsages}</div>;\r\n};\r\n\r\nexport default MessageList;\r\n","// extracted by mini-css-extract-plugin\nexport default {};","import React from \"react\";\r\nimport classes from \"./Dialog.module.css\";\r\nimport UserMessage from \"../../UserMessage/UserMessage.tsx\";\r\nimport SendMessage from \"./SendMessage/SendMessage.tsx\";\r\nimport \"moment/locale/ru\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport logo from \"././../../UI/Images/logo.png\";\r\nimport { DialogData, SendMessageDataType } from \"../../../redux/types/types.ts\";\r\nimport { deleteMessage } from \"../../../redux/messagesReducer.ts\";\r\n\r\ntype DialogPropsType = {\r\n  login: string | null;\r\n  DialogData: {\r\n    items: Array<SendMessageDataType>;\r\n  } | DialogData;\r\n}\r\n\r\nconst Dialog: React.FC<DialogPropsType> = (props) => {\r\n  const moment = require('moment-timezone')\r\n  const { userId } = useParams();\r\n\r\n  const Dialog =\r\n    props.DialogData &&\r\n    props.DialogData.items &&\r\n    props.DialogData.items.length > 0\r\n      ? props.DialogData?.items.map((dialog) => (\r\n          <UserMessage\r\n          isDeletable={true}\r\n          viewed={dialog.viewed}\r\n          message={dialog.body}\r\n          name={dialog.senderName}\r\n          logo={logo}\r\n          messageId={dialog.id}\r\n          id={dialog.senderId}\r\n          key={dialog.id}\r\n          deleteMessage={deleteMessage}\r\n          time={moment.utc(dialog.addedAt).tz('Europe/Moscow').format('YYYY-MM-DD HH:mm')}\r\n         />\r\n        ))\r\n      : null;\r\n\r\n  return userId ? (\r\n    <div>\r\n      <div className={classes.message}>{Dialog}</div>\r\n      <SendMessage\r\n        friendId={Number(userId)}\r\n        login={props.login}\r\n      />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Dialog;\r\n","import React, { useEffect } from \"react\";\r\nimport classes from \"./Messages.module.css\";\r\nimport MessageList from \"./MessageList/MessageList.tsx\";\r\nimport Dialog from \"./Dialog/Dialog.tsx\";\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../redux/storeRedux.ts\";\r\nimport {\r\n  getDialog,\r\n  getMessages,\r\n  MessagesActionsTypes,\r\n} from \"../../redux/messagesReducer.ts\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport withAuth from \"../hoc/withAuth.tsx\";\r\n\r\nconst Messages: React.FC = () => {\r\n  const { userId } = useParams();\r\n  const isLogined = useSelector((s: AppStateType) => s.login.isLogined);\r\n  const isFetching = useSelector((s: AppStateType) => s.messages.isFetching);\r\n  const messagesData = useSelector(\r\n    (s: AppStateType) => s.messages.MessagesData\r\n  );\r\n  const dialogData = useSelector((s: AppStateType) => s.messages.DialogData);\r\n  const login = useSelector((s: AppStateType) => s.login.login);\r\n  const dispatch: ThunkDispatch<AppStateType, void, MessagesActionsTypes> =\r\n    useDispatch();\r\n  useEffect(() => {\r\n    if (isLogined) {\r\n      dispatch(getMessages());\r\n      if (userId) {\r\n        dispatch(getDialog(Number(userId)));\r\n      }\r\n    }\r\n  }, [userId]);\r\n\r\n  return isFetching ? (\r\n    <Preloader />\r\n  ) : (\r\n    <div className={classes.content}>\r\n      <MessageList MessagesData={messagesData} />\r\n      <Dialog login={login} DialogData={dialogData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withAuth(Messages);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Avatar, Card, CardContent, Typography, IconButton } from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport viewed from \"./../UI/Images/viewed.png\";\r\nimport sended from \"./../UI/Images/sended.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../redux/storeRedux\";\r\nimport {\r\n  deleteMessage,\r\n  getDialog,\r\n  MessagesActionsTypes,\r\n} from \"../../redux/messagesReducer.ts\";\r\n\r\ntype UserMessagePropsType = {\r\n  isDeletable: boolean;\r\n  logo: string;\r\n  name: string;\r\n  time?: string;\r\n  deleteMessage?: (id: number) => void;\r\n  messageId?: number | undefined;\r\n  message?: string;\r\n  link?: string;\r\n  id: number;\r\n  viewed?: boolean;\r\n};\r\n\r\nconst UserMessage: React.FC<UserMessagePropsType> = (props) => {\r\n  const messageId = props.messageId || 2;\r\n  const dispatch: ThunkDispatch<AppStateType, void, MessagesActionsTypes> = \r\n    useDispatch();\r\n\r\n  const User = () => (\r\n    <Card variant=\"outlined\" style={{ display: \"flex\", marginBottom: \"10px\" }}>\r\n      <Avatar src={props.logo} sx={{ width: 70, height: 70 }} />\r\n      <CardContent style={{ flex: \"1\" }}>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div>\r\n            <Typography variant=\"subtitle1\">{props.name}</Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">{props.time}</Typography>\r\n          </div>\r\n          {props.isDeletable && (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => dispatch(deleteMessage(messageId))}\r\n            >\r\n              <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          )}\r\n        </div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", marginTop: \"5px\" }}>\r\n          <Typography variant=\"body1\" style={{ flex: \"1\" }}>{props.message}</Typography>\r\n          {props.messageId && (\r\n            <img \r\n              style={{ width: \"20px\", marginLeft: \"10px\" }} \r\n              src={props.viewed ? viewed : sended} \r\n              alt={props.viewed ? \"viewed\" : \"sended\"} \r\n            />\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n\r\n  return props.link ? (\r\n    <NavLink to={`/messages/${props.id}`} onClick={() => dispatch(getDialog(props.id))}>\r\n      <User />\r\n    </NavLink>\r\n  ) : (\r\n    <div>\r\n      <User />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMessage;","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../redux/storeRedux\";\r\n\r\nconst withAuth = (WrappedComponent) => {\r\n  \r\n  let WithAuthComponent = (props) => {\r\n    const isLogined = useSelector((s: AppStateType) => s.login.isLogined)\r\n\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n      if (!isLogined) {\r\n        navigate(\"/login\");\r\n      }\r\n    }, [isLogined, navigate]);\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n  return WithAuthComponent;\r\n};\r\n\r\nexport default withAuth;\r\n"],"names":["props","dispatch","useDispatch","register","handleSubmit","reset","formState","errors","useForm","_jsxs","onSubmit","data","ws","send","messageText","trim","sendMessage","friendId","className","classes","children","_jsx","TextField","error","id","label","variant","autoComplete","required","Button","type","Messsages","Array","isArray","MessagesData","map","message","UserMessage","link","name","userName","logo","photos","small","_props$DialogData","moment","require","userId","useParams","Dialog","DialogData","items","length","dialog","isDeletable","viewed","body","senderName","messageId","senderId","deleteMessage","time","utc","addedAt","tz","format","SendMessage","Number","login","withAuth","Messages","isLogined","useSelector","s","isFetching","messages","messagesData","dialogData","useEffect","getMessages","getDialog","Preloader","MessageList","User","Card","style","display","marginBottom","Avatar","src","sx","width","height","CardContent","flex","justifyContent","Typography","color","IconButton","size","onClick","DeleteIcon","fontSize","alignItems","marginTop","marginLeft","alt","NavLink","to","WrappedComponent","navigate","useNavigate"],"sourceRoot":""}