{"version":3,"file":"static/js/905.a6088cfd.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/ChatPage/ChatPage.module.css?e0ec","components/ChatPage/ChatPage.tsx","../node_modules/@mui/icons-material/esm/Delete.js","../node_modules/@mui/material/internal/svg-icons/Person.js","../node_modules/@mui/material/Avatar/avatarClasses.js","../node_modules/@mui/material/Avatar/Avatar.js","../node_modules/@mui/material/CardContent/cardContentClasses.js","../node_modules/@mui/material/CardContent/CardContent.js","../node_modules/@mui/material/Card/cardClasses.js","../node_modules/@mui/material/Card/Card.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chatContainer\":\"ChatPage_chatContainer__aVU5c\"};","import React, { useEffect, useMemo, useRef, useState } from \"react\";\r\nimport SendMessage from \"../Messages/Dialog/SendMessage/SendMessage.tsx\";\r\nimport UserMessage from \"../UserMessage/UserMessage.tsx\";\r\nimport Preloader from \"../UI/Preloader/Preloader.jsx\";\r\nimport withAuth from \"../hoc/withAuth.tsx\";\r\nimport classes from \"./ChatPage.module.css\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  ChatActionsTypes,\r\n  startListeningMessages,\r\n} from \"../../redux/chatReducer.ts\";\r\nimport { AppStateType } from \"../../redux/storeRedux.ts\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\n\r\nexport type ChatMessageType = {\r\n  message: string;\r\n  photo: string;\r\n  userId: number;\r\n  userName: string;\r\n  timestamp: number;\r\n};\r\ntype MessagesProps = {\r\n  messagesData: ChatMessageType[];\r\n  bottomOfChatRef: React.RefObject<HTMLDivElement>;\r\n}\r\n\r\nconst ChatPage: React.FC = () => {\r\n  \r\n  const [isAutoScroll, setIsAutoScroll] = useState(true);\r\n  const dispatch: ThunkDispatch<AppStateType, void, ChatActionsTypes> =\r\n    useDispatch();\r\n  const messagesData = useSelector((s: AppStateType) => s.chat.messages);\r\n  const isFetching = useSelector((s: AppStateType) => s.chat.isFetching);\r\n  const status = useSelector((s: AppStateType) => s.chat.status);\r\n  const bottomOfChatRef = useRef<HTMLDivElement>(null);\r\n  const chatContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(startListeningMessages());\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    if (bottomOfChatRef.current && isAutoScroll) {\r\n      bottomOfChatRef.current.scrollIntoView();\r\n    }\r\n  }, [messagesData]);\r\n\r\n  const handleScroll = () => {\r\n    const chatContainer = chatContainerRef.current;\r\n    if (chatContainer) {\r\n      const scrollTop = chatContainer.scrollTop;\r\n      const scrollHeight = chatContainer.scrollHeight;\r\n      const clientHeight = chatContainer.clientHeight;\r\n      setIsAutoScroll(scrollHeight - scrollTop - clientHeight <= 500);\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  return isFetching ? (\r\n    <Preloader />\r\n  ) : (\r\n    <div>\r\n      <div\r\n        className={classes.chatContainer}\r\n        ref={chatContainerRef}\r\n        onScroll={handleScroll}\r\n      >\r\n        <Messages messagesData ={messagesData} bottomOfChatRef={bottomOfChatRef}/>\r\n      </div>\r\n      <SendMessage ws={true} friendId={0} login={null} status={status} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Messages: React.FC<MessagesProps> = \r\n  React.memo(({messagesData, bottomOfChatRef}) =>{\r\n   const messages = messagesData.map((message, index) => (\r\n      <React.Fragment key={`${message.userId}-${message.timestamp}-${index}`}>\r\n        <UserMessage\r\n          isDeletable={false}\r\n          message={message.message}\r\n          name={message.userName}\r\n          logo={message.photo}\r\n          id={message.userId}\r\n        />\r\n        <div ref={bottomOfChatRef}></div>\r\n      </React.Fragment>\r\n    ))\r\n  return <>{messages.length > 0 ? messages : <p>No messages yet.</p>}</>\r\n})\r\n\r\n\r\nexport default withAuth(ChatPage);\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: {\n      color: (theme.vars || theme).palette.background.default,\n      ...(theme.vars ? {\n        backgroundColor: theme.vars.palette.Avatar.defaultBg\n      } : {\n        backgroundColor: theme.palette.grey[400],\n        ...theme.applyStyles('dark', {\n          backgroundColor: theme.palette.grey[600]\n        })\n      })\n    }\n  }]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded({\n    ...imgProps,\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = {\n    ...props,\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  };\n  // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: {\n          ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, {\n      ...imgSlotProps\n    });\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getCardContentUtilityClass } from \"./cardContentClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  padding: 16,\n  '&:last-child': {\n    paddingBottom: 24\n  }\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n    className,\n    component = 'div',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    component\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport { getCardUtilityClass } from \"./cardClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})({\n  overflow: 'hidden'\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n    className,\n    raised = false,\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    raised\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, {\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;"],"names":["Messages","React","_ref","messagesData","bottomOfChatRef","messages","map","message","index","_jsxs","children","_jsx","UserMessage","isDeletable","name","userName","logo","photo","id","userId","ref","timestamp","_Fragment","length","withAuth","ChatPage","isAutoScroll","setIsAutoScroll","useState","dispatch","useDispatch","useSelector","s","chat","isFetching","status","useRef","chatContainerRef","useEffect","startListeningMessages","current","scrollIntoView","Preloader","className","classes","onScroll","handleScroll","chatContainer","scrollTop","scrollHeight","clientHeight","SendMessage","ws","friendId","login","createSvgIcon","d","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","AvatarRoot","styled","overridesResolver","props","styles","ownerState","root","variant","colorDefault","memoTheme","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","style","vars","shape","color","palette","background","default","backgroundColor","Avatar","defaultBg","grey","applyStyles","AvatarImg","img","textAlign","objectFit","textIndent","AvatarFallback","Person","fallback","inProps","useDefaultProps","alt","childrenProp","component","slots","slotProps","imgProps","sizes","src","srcSet","other","loaded","_ref2","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","useLoaded","hasImg","hasImgNotFailing","composeClasses","useUtilityClasses","ImgSlot","imgSlotProps","useSlot","elementType","externalForwardedProps","additionalProps","as","clsx","getCardContentUtilityClass","CardContentRoot","padding","paddingBottom","getCardUtilityClass","CardRoot","Paper","raised","elevation","undefined"],"sourceRoot":""}