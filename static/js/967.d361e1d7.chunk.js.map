{"version":3,"file":"static/js/967.d361e1d7.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Profile/MyUser/MyUser.module.css?11a4","components/Profile/MyUser/MyUser.jsx","webpack://social_network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/getTime.js","components/Profile/MyPosts/Post/Post.jsx","webpack://social_network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/CreatePost/CreatePost.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profile.jsx","webpack://social_network/./src/components/UI/Button/MyButton.module.css?d4f4","components/UI/Button/MyButton.jsx","webpack://social_network/./src/components/UI/Input/MyInput.module.css?18b8","components/UI/Input/MyInput.jsx","webpack://social_network/./src/components/UserMessage/UserMessage.module.css?d361","components/UserMessage/UserMessage.jsx","webpack://social_network/./src/components/Profile/MyProfile.module.css?4676"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Description\":\"MyUser_Description__FMa2+\",\"start_dialog\":\"MyUser_start_dialog__iqMqt\",\"logo\":\"MyUser_logo__oDBy1\",\"Info\":\"MyUser_Info__KyYZ4\",\"contact\":\"MyUser_contact__g3MT9\",\"contactHrefs\":\"MyUser_contactHrefs__hTHTF\",\"file_input_wrapper\":\"MyUser_file_input_wrapper__rwsR0\",\"file_input\":\"MyUser_file_input__uF9yt\",\"file_label\":\"MyUser_file_label__WDAC-\",\"img_input_wrapper\":\"MyUser_img_input_wrapper__7w185\"};","import React, { useEffect, useState } from \"react\";\r\nimport MyInput from \"../../UI/Input/MyInput\";\r\nimport logo from \"./../../UI/Images/logo.png\";\r\nimport classes from \"./MyUser.module.css\";\r\nimport github from \"./../../UI/Images/github.png\";\r\nimport MyButton from \"../../UI/Button/MyButton\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport messages from './../../UI/Images/messages.png'\r\n\r\nconst MyUser = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  return isEditing && props.id ? (\r\n    <ChangeProfile\r\n      {...props}\r\n      isEditing={isEditing}\r\n      setIsEditing={setIsEditing}\r\n    />\r\n  ) : (\r\n    <ProfileData {...props} isEditing={isEditing} setIsEditing={setIsEditing} />\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ setIsEditing, isEditing, ...props }) => {\r\n  const { userId } = useParams();\r\n\r\n  const normalizeUrl = (url) => {\r\n    if (!/^https?:\\/\\//i.test(url)) {\r\n      return `https://${url}`;\r\n    }\r\n    return url;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Info}>\r\n      <div className={classes.contact}>\r\n        <img\r\n          src={\r\n            props.id && props.photo\r\n              ? props.photo\r\n              : props.userProfile.photos.small\r\n              ? props.userProfile.photos.small\r\n              : logo\r\n          }\r\n          className={classes.logo}\r\n        />\r\n        {!props.id ? (\r\n          <NavLink to={`/messages/${userId}`}>\r\n            {\" \"}\r\n            <img src={messages}\r\n              className={classes.start_dialog}\r\n              name=\"start dialog\"\r\n              onClick={() => {\r\n                props.createDialog(userId);\r\n              }}\r\n            />{\" \"}\r\n          </NavLink>\r\n        ) : (\r\n          <button onClick={() => setIsEditing(true)}>edit</button>\r\n        )}\r\n        <div className={classes.contactHrefs}>\r\n          {props.userProfile.contacts.github ? (\r\n            <a href={normalizeUrl(props.userProfile.contacts.github)}>\r\n              <img src={github} />\r\n            </a>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.Description}>\r\n        <div>\r\n          <span>Name: </span>\r\n          <span>{props.userProfile.fullName}</span>\r\n        </div>\r\n\r\n        {props.userProfile.aboutMe ? (\r\n          <div>\r\n            <span>About: </span>\r\n            <span>{props.userProfile.aboutMe}</span>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div>\r\n          <span>Job: </span>\r\n          <span>{props.userProfile.lookingForAJob ? \"looking\" : \"have\"}</span>\r\n        </div>\r\n        {props.userProfile.lookingForAJobDescription ? (\r\n          <div>\r\n            <span>Job Description: </span>\r\n            <span>{props.userProfile.lookingForAJobDescription}</span>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <span>{props.status}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ChangeProfile = ({ setIsEditing, isEditing, ...props }) => {\r\n  const { userId } = useParams();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      FullName: props.userProfile.fullName,\r\n      AboutMe: props.userProfile.aboutMe,\r\n      LookingForAJobDescription: props.userProfile.lookingForAJobDescription,\r\n      Status: props.status,\r\n      lookingForAJob: props.userProfile.lookingForAJob,\r\n      github: props.userProfile.contacts.github,\r\n    },\r\n  });\r\n\r\n  const submit = (data) => {\r\n    data[\"contacts\"] = { github: data.github };\r\n    console.log(data);\r\n\r\n    if (data.image[0]) {\r\n      props.setPhoto(data.image[0]);\r\n    }\r\n    props.updateStatus(data.Status);\r\n    props.changeProfile(data, userId ? userId : props.id);\r\n    reset();\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className={classes.Info}>\r\n      <div className={classes.img_input_wrapper}>\r\n        <img\r\n          src={\r\n            props.id && props.photo\r\n              ? props.photo\r\n              : props.userProfile.photos.small\r\n              ? props.userProfile.photos.small\r\n              : logo\r\n          }\r\n          className={classes.logo}\r\n          alt=\"Profile\"\r\n        />\r\n        <div class={classes.file_input_wrapper}>\r\n          <input\r\n            type=\"file\"\r\n            placeholder=\"image url\"\r\n            class={classes.file_input}\r\n            {...register(\"image\")}\r\n          />\r\n          <span class={classes.file_label}>Выберите изображение</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.Description}>\r\n        <div>\r\n          <span>Name: </span>\r\n          <MyInput\r\n            holder=\"Name (required)\"\r\n            {...register(\"FullName\", { required: true })}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <span>About: </span>\r\n          <MyInput\r\n            holder=\"About (required)\"\r\n            {...register(\"AboutMe\", { required: true })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <span>Looking for a Job: </span>\r\n          <input type=\"checkbox\" {...register(\"lookingForAJob\")} />\r\n        </div>\r\n        <div>\r\n          <span>Job Description: </span>\r\n          <MyInput\r\n            {...register(\"LookingForAJobDescription\", { required: true })}\r\n            holder=\"Job Description (required)\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <span>Status: </span>\r\n          <MyInput {...register(\"Status\")} holder=\"Status\" />\r\n        </div>\r\n        <div>\r\n          <span>Github Page: </span>\r\n          <MyInput holder=\"github page\" {...register(\"github\")} />\r\n        </div>\r\n        <MyButton\r\n          style={{ width: \"200px\", alignSelf: \"center\" }}\r\n          type=\"submit\"\r\n          name=\"Save\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default MyUser;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Post\":\"Post_Post__80HbP\",\"deletePost\":\"Post_deletePost__4rtr6\"};","const getTime = () => {\r\n  const hours = new Date().getHours().toString().padStart(2, \"0\");\r\n  const minutes = new Date().getMinutes().toString().padStart(2, \"0\");\r\n  return `${hours}:${minutes}`;\r\n};\r\nexport default getTime;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport UserMessage from \"../../../UserMessage/UserMessage\";\r\nimport logo from \"./../../../UI/Images/logo.png\";\r\nimport getTime from \"../getTime\";\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={classes.Post}>\r\n      <UserMessage\r\n        message={props.message}\r\n        name={props.name}\r\n        logo={props.logo ? props.logo : logo}\r\n        time={getTime()}\r\n        id={props.id}\r\n      />\r\n      {props.userId ? <span className={classes.deletePost} onClick={() => {props.deletePost(props.id)}}>X</span>: null } \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MyPosts\":\"MyPosts_MyPosts__ZTdRm\"};","import React, { useState, useRef } from \"react\";\r\nimport classes from \"./CreatePost.module.css\";\r\nimport MyButton from \"../../../UI/Button/MyButton\";\r\nimport MyInput from \"../../../UI/Input/MyInput\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst CreatePost = (props) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({});\r\n\r\n  const submit = (data) => {\r\n    if (data.postText.trim() !== \"\") {\r\n      props.addPost(props.name, data.postText);\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)}>\r\n      <MyInput holder=\"Post\" {...register(\"postText\", { required: true })} autoComplete=\"off\" />\r\n      <MyButton name=\"Create Post\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport CreatePost from \"./CreatePost/CreatePost\";\r\n\r\nconst MyPosts = (props) => {\r\n  const Posts = props.PostData.map((post) => (\r\n    <Post\r\n      userId = {props.id}\r\n      deletePost={props.deletePost}\r\n      message={post.message}\r\n      name={post.name}\r\n      logo={props.logo}\r\n      time={post.time}\r\n      id={post.id}\r\n      key={post.id}\r\n    />\r\n  ));\r\n  return (\r\n    <div className={classes.MyPosts}>\r\n      <h4>My posts</h4>\r\n      {!props.status && props.id ? <CreatePost\r\n        name={props.userName}\r\n        addPost={props.addPost}\r\n        \r\n        postText={props.postText}\r\n      /> : null}\r\n      {Posts}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport classes from \"./MyProfile.module.css\";\r\nimport MyUser from \"./MyUser/MyUser\";\r\nimport MyPosts from \"./MyPosts/MyPosts\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      <MyUser\r\n        setPhoto={props.setPhoto}\r\n        createDialog={props.createDialog}\r\n        updateStatus={props.updateStatus}\r\n        status={props.status}\r\n        photo={props.photo}\r\n        id={props.id}\r\n        userProfile={props.userProfile}\r\n        changeProfile={props.changeProfile}\r\n      />\r\n      <MyPosts\r\n        deletePost={props.deletePost}\r\n        id={props.id}\r\n        logo={props.userProfile.photos.small}\r\n        userName={props.userProfile.fullName}\r\n        PostData={props.PostData}\r\n        postText={props.postText}\r\n        addPost={props.addPost}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MyButton\":\"MyButton_MyButton__CeT00\"};","import React from \"react\";\r\nimport classes from \"./MyButton.module.css\";\r\n\r\nconst MyButton = (props) => {\r\n  return (\r\n    <button className={classes.MyButton} {...props}>\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MyButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"MyInput_input__537b-\",\"error\":\"MyInput_error__klO6M\"};","import React, { forwardRef } from \"react\";\r\nimport classes from \"./MyInput.module.css\";\r\n\r\nconst MyInput = forwardRef(({...props}, ref) => {\r\n\r\n  return (\r\n    <input\r\n    ref={ref}\r\n      className={`${classes.input} ${props.iserror ? classes.error : ''}`}\r\n      {...props}\r\n    placeholder={props.holder}\r\n    />\r\n  );\r\n});\r\n\r\nexport default MyInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"UserMessage_user__bqMk4\",\"logo\":\"UserMessage_logo__4q0Z8\",\"delete\":\"UserMessage_delete__02DOw\",\"message\":\"UserMessage_message__AZf+w\",\"messageCont\":\"UserMessage_messageCont__0VPdE\",\"viewed\":\"UserMessage_viewed__xQiNt\",\"viewedStatus\":\"UserMessage_viewedStatus__hRTgS\",\"logoMessage\":\"UserMessage_logoMessage__kUGtV\"};","import React from \"react\";\r\nimport classes from \"./UserMessage.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport viewed from \"./../UI/Images/viewed.png\";\r\nimport sended from \"./../UI/Images/sended.png\";\r\n\r\nconst UserMessage = (props) => {\r\n  const User = () => (\r\n    <div className={classes.message}>\r\n      <img src={props.logo} className={classes.logoMessage} />\r\n      <div className={classes.user}>\r\n        <div>\r\n          <span>{props.name}</span>\r\n          <span>{props.time}</span>\r\n          {props.deleteMessage ? (\r\n        <span className={classes.delete} onClick={() => props.deleteMessage(props.messageId)}>X</span>\r\n      ) : null}\r\n        </div>\r\n        <p>{props.message}</p>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n  return props.link ? (\r\n    <NavLink\r\n      to={`/messages/${props.id}`}\r\n      onClick={() => {\r\n        props.getDialog(props.id);\r\n      }}\r\n    >\r\n      <User />\r\n    </NavLink>\r\n  ) : (\r\n    <div className={classes.messageCont}>\r\n      <User />\r\n      {props.messageId ? \r\n      <p className={classes.viewed}>\r\n        {props.viewed ? (\r\n          <img className={classes.viewedStatus} src={viewed} alt=\"viewed\" />\r\n        ) :(\r\n          <img className={classes.viewedStatus} src={sended} alt=\"sended\" />\r\n        )}\r\n      </p>: null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMessage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyProfile_content__YaKMV\",\"preloader\":\"MyProfile_preloader__S+0pm\"};"],"names":["ProfileData","_ref","setIsEditing","isEditing","props","userId","useParams","_jsxs","className","classes","children","_jsx","src","id","photo","userProfile","photos","small","logo","onClick","NavLink","to","messages","name","createDialog","contacts","github","href","url","test","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","status","ChangeProfile","_ref2","register","handleSubmit","reset","formState","errors","useForm","defaultValues","FullName","AboutMe","LookingForAJobDescription","Status","onSubmit","data","console","log","image","setPhoto","updateStatus","changeProfile","alt","class","type","placeholder","MyInput","holder","required","MyButton","style","width","alignSelf","useState","getTime","Date","getHours","toString","padStart","getMinutes","UserMessage","message","time","deletePost","postText","trim","addPost","autoComplete","Posts","PostData","map","post","Post","CreatePost","userName","content","MyUser","MyPosts","forwardRef","ref","iserror","User","deleteMessage","messageId","link","getDialog","viewed"],"sourceRoot":""}