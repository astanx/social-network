{"version":3,"file":"static/js/231.502bc3d6.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Profile/MyProfile.module.css?4676","webpack://social_network/./src/components/Profile/MyUser/MyUser.module.css?11a4","components/Profile/MyUser/MyUser.tsx","webpack://social_network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/getTime.js","components/Profile/MyPosts/Post/Post.tsx","webpack://social_network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/CreatePost/CreatePost.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfilePage.tsx","components/UserMessage/UserMessage.tsx","components/hoc/withAuth.tsx","../node_modules/@mui/icons-material/esm/Delete.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyProfile_content__YaKMV\",\"preloader\":\"MyProfile_preloader__S+0pm\"};","// extracted by mini-css-extract-plugin\nexport default {\"Description\":\"MyUser_Description__FMa2+\",\"start_dialog\":\"MyUser_start_dialog__iqMqt\",\"logo\":\"MyUser_logo__oDBy1\",\"Info\":\"MyUser_Info__KyYZ4\",\"contact\":\"MyUser_contact__g3MT9\",\"contactHrefs\":\"MyUser_contactHrefs__hTHTF\",\"file_input_wrapper\":\"MyUser_file_input_wrapper__rwsR0\",\"file_input\":\"MyUser_file_input__uF9yt\",\"file_label\":\"MyUser_file_label__WDAC-\",\"img_input_wrapper\":\"MyUser_img_input_wrapper__7w185\"};","import React, { useState } from \"react\";\r\n\r\nimport logo from \"./../../UI/Images/logo.png\";\r\nimport classes from \"./MyUser.module.css\";\r\nimport github from \"./../../UI/Images/github.png\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport messages from \"./../../UI/Images/messages.png\";\r\nimport { UserProfileType } from \"../../../redux/types/types.ts\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../../redux/storeRedux.ts\";\r\nimport { ProfileActionsTypes } from \"../../../redux/profileReducer.ts\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  TextField,\r\n  Avatar,\r\n  Box,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\n\r\nconst MyUser: React.FC<any> = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  return isEditing && props.isMyUser ? (\r\n    <ChangeProfile\r\n      {...props}\r\n      isEditing={isEditing}\r\n      setIsEditing={setIsEditing}\r\n    />\r\n  ) : (\r\n    <ProfileData {...props} isEditing={isEditing} setIsEditing={setIsEditing} />\r\n  );\r\n};\r\n\r\ntype EditingProps = {\r\n  setIsEditing: (isEditing: boolean) => void;\r\n  isEditing: boolean;\r\n};\r\n\r\ntype ProfileDataProps = {\r\n  userProfile: UserProfileType | null;\r\n  createDialog: (id: number) => void;\r\n  photo: null | string;\r\n  id: number | null;\r\n  status: string | null;\r\n  isMyUser: boolean;\r\n  login: string | null;\r\n};\r\n\r\nconst ProfileData: React.FC<ProfileDataProps & EditingProps> = ({\r\n  setIsEditing,\r\n  isEditing,\r\n  ...props\r\n}) => {\r\n  const { userId } = useParams();\r\n  const dispatch: ThunkDispatch<AppStateType, void, ProfileActionsTypes> =\r\n    useDispatch();\r\n  const normalizeUrl = (url) => {\r\n    if (!/^https?:\\/\\//i.test(url)) {\r\n      return `https://${url}`;\r\n    }\r\n    return url;\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.Info} sx={{ padding: 2 }}>\r\n      <Box className={classes.contact} sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Avatar\r\n          src={\r\n            props.id && props.photo\r\n              ? props.photo\r\n              : props.userProfile?.photos.small\r\n              ? props.userProfile.photos.small\r\n              : logo\r\n          }\r\n          sx={{ width: 150, height: 150 }}\r\n        />\r\n\r\n        {!props.isMyUser ? (\r\n          <NavLink to={`/messages/${userId}`} style={{ marginLeft: '16px' }}>\r\n            <IconButton \r\n              onClick={() => dispatch(props.createDialog(Number(userId)))}\r\n              sx={{ padding: 0 }} \r\n              aria-label=\"start dialog\"\r\n            >\r\n              <img style={{width: '80px'}} src={messages} alt=\"Start Dialog\" />\r\n            </IconButton>\r\n          </NavLink>\r\n        ) : (\r\n          <Button variant=\"contained\" onClick={() => setIsEditing(true)}>\r\n            Edit\r\n          </Button>\r\n        )}\r\n\r\n        <Box className={classes.contactHrefs} sx={{ marginLeft: '16px' }}>\r\n          {props.userProfile?.contacts.github ? (\r\n            <a href={normalizeUrl(props.userProfile.contacts.github)} target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <img src={github} alt=\"GitHub\" />\r\n            </a>\r\n          ) : null}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box className={classes.Description} sx={{ marginTop: 2 }}>\r\n        <Typography variant=\"body1\">\r\n          <strong>Name:</strong> {props.login || props.userProfile?.fullName}\r\n        </Typography>\r\n\r\n        {props.userProfile?.aboutMe && (\r\n          <Typography variant=\"body1\">\r\n            <strong>About:</strong> {props.userProfile.aboutMe}\r\n          </Typography>\r\n        )}\r\n\r\n        <Typography variant=\"body1\">\r\n          <strong>Job:</strong> {props.userProfile?.lookingForAJob ? \"Looking\" : \"Have\"}\r\n        </Typography>\r\n\r\n        {props.userProfile?.lookingForAJobDescription && (\r\n          <Typography variant=\"body1\">\r\n            <strong>Job Description:</strong> {props.userProfile.lookingForAJobDescription}\r\n          </Typography>\r\n        )}\r\n\r\n        <Typography variant=\"body1\">{props.status}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\ntype ChangeProfileProps = {\r\n  userProfile: UserProfileType | null;\r\n  setPhoto: (file: string) => void;\r\n  updateStatus: (status: string) => void;\r\n  changeProfile: (data: any, userId: number) => void;\r\n  photo: string | null;\r\n  id: number | null;\r\n  login: string | null;\r\n  status: string | null;\r\n};\r\ntype FormValues = {\r\n  FullName: string;\r\n  AboutMe: string | null;\r\n  LookingForAJobDescription: string;\r\n  Status: string | null;\r\n  lookingForAJob: boolean;\r\n  github: string | null;\r\n  image: string | FileList;\r\n};\r\n\r\nconst ChangeProfile: React.FC<ChangeProfileProps & EditingProps> = ({\r\n  setIsEditing,\r\n  isEditing,\r\n  ...props\r\n}) => {\r\n  const { userId } = useParams();\r\n  const dispatch: ThunkDispatch<AppStateType, void, ProfileActionsTypes> =\r\n    useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm<FormValues>({\r\n    defaultValues: {\r\n      FullName: props.login || props.userProfile?.fullName,\r\n      AboutMe: props.userProfile?.aboutMe,\r\n      LookingForAJobDescription: props.userProfile?.lookingForAJobDescription,\r\n      Status: props.status,\r\n      lookingForAJob: props.userProfile?.lookingForAJob,\r\n      github: props.userProfile?.contacts.github,\r\n    },\r\n  });\r\n\r\n  const submit = (data) => {\r\n    data[\"contacts\"] = { github: data.github };\r\n\r\n    if (data.image[0]) {\r\n      dispatch(props.setPhoto(data.image[0]));\r\n    }\r\n    dispatch(props.updateStatus(data.Status));\r\n    dispatch(\r\n      props.changeProfile(\r\n        data,\r\n        Number(userId) ? Number(userId) : Number(props.id)\r\n      )\r\n    );\r\n    reset();\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className={classes.Info}>\r\n      <div className={classes.img_input_wrapper}>\r\n        <Avatar\r\n          src={\r\n            props.id && props.photo\r\n              ? props.photo\r\n              : props.userProfile?.photos.small\r\n              ? props.userProfile.photos.small\r\n              : logo\r\n          }\r\n          sx={{ width: 150, height: 150 }}\r\n        />\r\n\r\n        <Box sx={{ margin: \"20px\" }}>\r\n          <input\r\n            accept=\"image/*\"\r\n            id=\"file-input\"\r\n            type=\"file\"\r\n            style={{ display: \"none\" }}\r\n            {...register(\"image\")}\r\n          />\r\n          <label htmlFor=\"file-input\">\r\n            <Button\r\n              variant=\"contained\"\r\n              component=\"span\"\r\n              sx={{ marginRight: \"10px\" }}\r\n            >\r\n              Upload File\r\n            </Button>\r\n          </label>\r\n        </Box>\r\n      </div>\r\n\r\n      <div className={classes.Description}>\r\n        <TextField\r\n          error={!!errors.FullName}\r\n          id=\"outlined-basic\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n          {...register(\"FullName\", { required: true })}\r\n        />\r\n\r\n        <TextField\r\n          error={!!errors.AboutMe}\r\n          id=\"outlined-basic\"\r\n          label=\"About\"\r\n          variant=\"outlined\"\r\n          {...register(\"AboutMe\", { required: true })}\r\n        />\r\n        <TextField\r\n          error={!!errors.LookingForAJobDescription}\r\n          id=\"outlined-basic\"\r\n          label=\"Job Description\"\r\n          variant=\"outlined\"\r\n          {...register(\"LookingForAJobDescription\", { required: true })}\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"Status\"\r\n          variant=\"outlined\"\r\n          {...register(\"Status\", { required: true })}\r\n        />\r\n        <TextField\r\n          id=\"outlined-basic\"\r\n          label=\"GitHub Page\"\r\n          variant=\"outlined\"\r\n          {...register(\"github\", { required: true })}\r\n        />\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            label=\"Looking for a job: \"\r\n            control={<Checkbox />}\r\n            {...register(\"lookingForAJob\")}\r\n          />\r\n        </FormGroup>\r\n\r\n        <Button\r\n          style={{ width: \"200px\", alignSelf: \"center\" }}\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n        >\r\n          Save\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default MyUser;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Post\":\"Post_Post__80HbP\",\"deletePost\":\"Post_deletePost__4rtr6\"};","const getTime = () => {\r\n  const hours = new Date().getHours().toString().padStart(2, \"0\");\r\n  const minutes = new Date().getMinutes().toString().padStart(2, \"0\");\r\n  return `${hours}:${minutes}`;\r\n};\r\nexport default getTime;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport UserMessage from \"../../../UserMessage/UserMessage.tsx\";\r\nimport logo from \"./../../../UI/Images/logo.png\";\r\nimport getTime from \"../getTime.js\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../../../redux/storeRedux.ts\";\r\nimport { ProfileActionsTypes } from \"../../../../redux/profileReducer.ts\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Post = (props) => {\r\n  const dispatch: ThunkDispatch<AppStateType, void, ProfileActionsTypes> = useDispatch()\r\n\r\n  return (\r\n    <div className={classes.Post}>\r\n      <UserMessage\r\n        message={props.message}\r\n        name={props.name}\r\n        logo={props.logo ? props.logo : logo}\r\n        time={getTime()}\r\n        id={props.id} isDeletable={false}   />\r\n      {props.isMyUser ? <span className={classes.deletePost} onClick={() => {dispatch(props.deletePost(props.id))}}>X</span>: null } \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MyPosts\":\"MyPosts_MyPosts__ZTdRm\"};","import React from \"react\";\r\nimport classes from \"./CreatePost.module.css\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../../../redux/storeRedux.ts\";\r\nimport { ProfileActionsTypes } from \"../../../../redux/profileReducer.ts\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Stack, TextField } from \"@mui/material\";\r\n\r\nconst CreatePost = (props) => {\r\n  const dispatch: ThunkDispatch<AppStateType, void, ProfileActionsTypes> =\r\n    useDispatch();\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({});\r\n\r\n  const submit = (data) => {\r\n    if (data.postText.trim() !== \"\") {\r\n      dispatch(props.addPost(props.name, data.postText));\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)}>\r\n      <Stack justifyContent=\"center\">\r\n        <TextField\r\n          error={!!errors.postText}\r\n          id=\"outlined-basic\"\r\n          label=\"Post\"\r\n          variant=\"filled\"\r\n          autoComplete=\"off\"\r\n          {...register(\"postText\", { required: true })}\r\n        />\r\n      </Stack>\r\n      <Button variant=\"contained\" type=\"submit\">\r\n        Create Post\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post.tsx\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport CreatePost from \"./CreatePost/CreatePost.tsx\";\r\nimport { NewPostType } from \"../../../redux/types/types\";\r\n\r\n\r\n\r\ntype MyPostsPropsType = {\r\n  isMyUser: boolean;\r\n  PostData: Array<NewPostType>\r\n\r\n  id: number | null \r\n  userName: string | undefined\r\n\r\n  logo: string | null | undefined\r\n  \r\n  addPost: (name: string , text: string) => void\r\n  deletePost: (id: number) => void\r\n}\r\n\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n  const Posts = props.PostData.map((post) => (\r\n    <Post\r\n    isMyUser={props.isMyUser}\r\n      userId = {props.id}\r\n      deletePost={props.deletePost}\r\n      message={post.message}\r\n      name={post.name}\r\n      logo={props.logo}\r\n      time={post.time}\r\n      id={post.id}\r\n      key={post.id}\r\n    />\r\n  ));\r\n  return (\r\n    <div className={classes.MyPosts}>\r\n      <h4>My posts(local)</h4>\r\n      { props.isMyUser  ? <CreatePost\r\n        name={props.userName}\r\n        addPost={props.addPost}\r\n      /> : null}\r\n      {Posts}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport classes from \"./MyProfile.module.css\";\r\nimport MyUser from \"./MyUser/MyUser.tsx\";\r\nimport MyPosts from \"./MyPosts/MyPosts.tsx\";\r\nimport { ProfilePropsType } from \"../../redux/types/types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../redux/storeRedux.ts\";\r\nimport {\r\n  actions,\r\n  setPhoto,\r\n  updateStatus,\r\n  changeProfile,\r\n  \r\n} from \"../../redux/profileReducer.ts\";\r\nimport {\r\n  createDialog\r\n} from \"../../redux/messagesReducer.ts\";\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n  const addPost = actions.addPost\r\n  const deletePost = actions.deletePost\r\n  const status = useSelector((s: AppStateType) => s.profile.status)\r\n  const postData = useSelector((s: AppStateType) => s.profile.PostData)\r\n  const photo = useSelector((s: AppStateType) => s.profile.photo)\r\n  const login = useSelector((s: AppStateType) => s.profile.login)\r\n  return (\r\n    <div className={classes.content}>\r\n      <MyUser\r\n      login={login}\r\n        isMyUser={props.isMyUser}\r\n        setPhoto={setPhoto}\r\n        createDialog={createDialog}\r\n        updateStatus={updateStatus}\r\n        status={status}\r\n        photo={photo}\r\n        id={props.userId}\r\n        userProfile={props.userProfile}\r\n        changeProfile={changeProfile}\r\n      />\r\n      <MyPosts\r\n      isMyUser={props.isMyUser}\r\n        deletePost={deletePost}\r\n        id={props.userId}\r\n        logo={props.userProfile?.photos?.small}\r\n        userName={props.userProfile?.fullName}\r\n        PostData={postData}\r\n        addPost={addPost}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  ProfileActionsTypes,\r\n  getProfile,\r\n} from \"../../redux/profileReducer.ts\";\r\nimport Profile from \"./Profile.tsx\";\r\nimport React, { useEffect } from \"react\";\r\nimport classes from \"./MyProfile.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Preloader from \"../UI/Preloader/Preloader.jsx\";\r\nimport { ProfilePropsType } from \"../../redux/types/types.ts\";\r\nimport { AppStateType } from \"../../redux/storeRedux.ts\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport withAuth from \"../hoc/withAuth.tsx\";\r\n\r\n\r\nconst ProfilePage: React.FC<ProfilePropsType> = () => {\r\n  const { userId } = useParams<{ userId: string }>();\r\n  const myUserId = useSelector((s: AppStateType)=> s.login.userId)\r\n  const dispatch: ThunkDispatch<AppStateType, void, ProfileActionsTypes> = useDispatch()\r\n  const isFetching = useSelector((s: AppStateType) => s.profile.isFetching)\r\n  const status = useSelector((s: AppStateType) => s.profile.status)\r\n  const userProfile = useSelector((s: AppStateType)=> s.profile.userProfile)\r\n  const idToFetch = Number(userId ? userId : myUserId)\r\n  useEffect(() => {\r\n    if (idToFetch){\r\n      dispatch(getProfile(idToFetch));\r\n    }\r\n    \r\n  }, [idToFetch]);\r\n  const isMyUser = userId ? false : true\r\n  return (\r\n    <div className={classes.content}>\r\n      {isFetching ? (\r\n        <Preloader />\r\n      ) : userProfile ? (\r\n        <Profile\r\n          isMyUser = {isMyUser}\r\n          status={status}\r\n          userProfile={userProfile}\r\n\r\n        />\r\n      ) : (\r\n        \"User is not available\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default withAuth (ProfilePage);\r\n\r\n\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Avatar, Card, CardContent, Typography, IconButton } from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport viewed from \"./../UI/Images/viewed.png\";\r\nimport sended from \"./../UI/Images/sended.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../redux/storeRedux\";\r\nimport {\r\n  deleteMessage,\r\n  getDialog,\r\n  MessagesActionsTypes,\r\n} from \"../../redux/messagesReducer.ts\";\r\n\r\ntype UserMessagePropsType = {\r\n  isDeletable: boolean;\r\n  logo: string;\r\n  name: string;\r\n  time?: string;\r\n  deleteMessage?: (id: number) => void;\r\n  messageId?: number | undefined;\r\n  message?: string;\r\n  link?: string;\r\n  id: number;\r\n  viewed?: boolean;\r\n};\r\n\r\nconst UserMessage: React.FC<UserMessagePropsType> = (props) => {\r\n  const messageId = props.messageId || 2;\r\n  const dispatch: ThunkDispatch<AppStateType, void, MessagesActionsTypes> = \r\n    useDispatch();\r\n\r\n  const User = () => (\r\n    <Card variant=\"outlined\" style={{ display: \"flex\", marginBottom: \"10px\" }}>\r\n      <Avatar src={props.logo} sx={{ width: 70, height: 70 }} />\r\n      <CardContent style={{ flex: \"1\" }}>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div>\r\n            <Typography variant=\"subtitle1\">{props.name}</Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">{props.time}</Typography>\r\n          </div>\r\n          {props.isDeletable && (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => dispatch(deleteMessage(messageId))}\r\n            >\r\n              <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          )}\r\n        </div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", marginTop: \"5px\" }}>\r\n          <Typography variant=\"body1\" style={{ flex: \"1\" }}>{props.message}</Typography>\r\n          {props.messageId && (\r\n            <img \r\n              style={{ width: \"20px\", marginLeft: \"10px\" }} \r\n              src={props.viewed ? viewed : sended} \r\n              alt={props.viewed ? \"viewed\" : \"sended\"} \r\n            />\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n\r\n  return props.link ? (\r\n    <NavLink to={`/messages/${props.id}`} onClick={() => dispatch(getDialog(props.id))}>\r\n      <User />\r\n    </NavLink>\r\n  ) : (\r\n    <div>\r\n      <User />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMessage;","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../redux/storeRedux\";\r\n\r\nconst withAuth = (WrappedComponent) => {\r\n  \r\n  let WithAuthComponent = (props) => {\r\n    const isLogined = useSelector((s: AppStateType) => s.login.isLogined)\r\n\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n      if (!isLogined) {\r\n        navigate(\"/login\");\r\n      }\r\n    }, [isLogined, navigate]);\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n  return WithAuthComponent;\r\n};\r\n\r\nexport default withAuth;\r\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');"],"names":["ProfileData","_ref","_props$userProfile","_props$userProfile2","_props$userProfile3","_props$userProfile4","_props$userProfile5","_props$userProfile6","setIsEditing","isEditing","props","userId","useParams","dispatch","useDispatch","_jsxs","Box","className","classes","sx","padding","children","display","alignItems","_jsx","Avatar","src","id","photo","userProfile","photos","small","logo","width","height","isMyUser","Button","variant","onClick","NavLink","to","style","marginLeft","IconButton","createDialog","Number","messages","alt","contacts","github","href","url","test","target","rel","marginTop","Typography","login","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","status","ChangeProfile","_ref2","_props$userProfile7","_props$userProfile8","_props$userProfile9","_props$userProfile10","_props$userProfile11","_props$userProfile12","register","handleSubmit","reset","formState","errors","useForm","defaultValues","FullName","AboutMe","LookingForAJobDescription","Status","onSubmit","data","image","setPhoto","updateStatus","changeProfile","margin","accept","type","htmlFor","component","marginRight","TextField","error","label","required","FormGroup","FormControlLabel","control","Checkbox","alignSelf","useState","getTime","Date","getHours","toString","padStart","getMinutes","UserMessage","message","name","time","isDeletable","deletePost","postText","trim","addPost","Stack","justifyContent","autoComplete","Posts","PostData","map","post","Post","CreatePost","userName","_props$userProfile$ph","actions","useSelector","s","profile","postData","MyUser","MyPosts","withAuth","ProfilePage","myUserId","isFetching","idToFetch","useEffect","getProfile","Preloader","Profile","messageId","User","Card","marginBottom","CardContent","flex","color","size","deleteMessage","DeleteIcon","fontSize","viewed","link","getDialog","WrappedComponent","isLogined","navigate","useNavigate","createSvgIcon","d"],"sourceRoot":""}