{"version":3,"file":"static/js/574.68bdd6ad.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/FindUser/FindUser.module.css?d418","webpack://social_network/./src/components/FindUser/User/User.module.css?d71e","components/FindUser/User/User.tsx","components/FindUser/FindUser.tsx","webpack://social_network/./src/components/UI/Paginator/Paginator.module.css?07ff","components/UI/Paginator/Paginator.tsx","components/FindUser/FindUserPage.tsx","webpack://social_network/./src/components/UI/Button/MyButton.module.css?d4f4","components/UI/Button/MyButton.tsx","webpack://social_network/./src/components/UI/Input/MyInput.module.css?18b8","components/UI/Input/MyInput.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FindUser_content__8mQfO\",\"users\":\"FindUser_users__8UIRP\",\"preloader\":\"FindUser_preloader__bH4h3\",\"form\":\"FindUser_form__-LKbX\"};","// extracted by mini-css-extract-plugin\nexport default {\"logo\":\"User_logo__hfNVS\",\"User\":\"User_User__Uz15a\",\"link\":\"User_link__q6iEb\",\"UserInfo\":\"User_UserInfo__aq3mP\"};","import React from \"react\";\r\nimport MyButton from \"../../UI/Button/MyButton.tsx\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./User.module.css\";\r\nimport logo from \"./../../UI/Images/logo.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { FindUserActionsTypes, follow, unfollow } from \"../../../redux/findUserReducer.ts\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../../redux/storeRedux.ts\";\r\n\r\nconst User = (props) => {\r\n  const dispatch: ThunkDispatch<AppStateType, void, FindUserActionsTypes> = useDispatch()\r\n  return (\r\n    <div className={classes.User}>\r\n      <div className={classes.UserInfo}>\r\n        <img src={props.logo ? props.logo : logo} className={classes.logo} />\r\n        {props.followed && props.isLogined ? (\r\n          <MyButton\r\n            disabled={props.followingInProgress.some((id) => id === props.id)}\r\n            onClick={() => dispatch(unfollow(props.id))}\r\n            name=\"UnFollow\"\r\n          />\r\n        ) : props.isLogined ? (\r\n          <MyButton\r\n            disabled={props.followingInProgress.some((id) => id === props.id)}\r\n            onClick={() => dispatch(follow(props.id))}\r\n            name=\"Follow\"\r\n          />\r\n        ) : null}\r\n      </div>\r\n      <NavLink to={`/profile/${props.id}`} className={classes.link}>\r\n        <div className={classes.UserInfo}>\r\n          <div>{props.name}</div>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import React from \"react\";\r\nimport classes from \"./FindUser.module.css\";\r\nimport User from \"./User/User.tsx\";\r\nimport MyInput from \"../UI/Input/MyInput.tsx\";\r\nimport MyButton from \"../UI/Button/MyButton.tsx\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../redux/storeRedux.ts\";\r\nimport { actions, FindUserActionsTypes } from \"../../redux/findUserReducer.ts\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst FindUser: React.FC = () => {\r\n  const isLogined = useSelector((s: AppStateType) => s.login.isLogined);\r\n  const followingInProgress = useSelector((s: AppStateType) => s.findUser.followingInProgress);\r\n  const term = useSelector((s: AppStateType) => s.findUser.term);\r\n  const friend = useSelector((s: AppStateType) => s.findUser.friend);\r\n  const dispatch: ThunkDispatch<AppStateType, void, FindUserActionsTypes> = useDispatch();\r\n  const userData = useSelector((s: AppStateType) => s.findUser.users);\r\n  const users = userData.map((user) => (\r\n    <User\r\n      logo={user.photos.small}\r\n      id={user.id}\r\n      key={user.id}\r\n      name={user.name}\r\n      followed={user.followed}\r\n      followingInProgress={followingInProgress}\r\n      isLogined={isLogined}\r\n    />\r\n  ));\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n  } = useForm({\r\n    defaultValues: {\r\n      term,\r\n      friend,\r\n    },\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const submit = (data) => {\r\n    const currentPage = 1; \r\n    dispatch(actions.setFilter(data.term, data.friend, currentPage));\r\n    navigate(`?term=${data.term}&friend=${data.friend}&page=${currentPage}`); \r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(submit)} className={classes.form}>\r\n        <MyInput\r\n        iserror={undefined} {...register(\"term\")}\r\n        holder=\"\"\r\n        autoComplete=\"off\"        />\r\n        <div>\r\n          <span>Only friends: </span>\r\n          <input type=\"checkbox\" {...register(\"friend\")} />\r\n        </div>\r\n        <MyButton name=\"Search\" />\r\n      </form>\r\n\r\n      <div className={classes.users}>{users}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindUser;","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Paginator_pagination__LhtGL\",\"selected\":\"Paginator_selected__tAYtY\"};","import React from \"react\";\r\nimport classes from \"./Paginator.module.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../../redux/storeRedux\";\r\nimport { actions, FindUserActionsTypes } from \"../../../redux/findUserReducer.ts\";\r\n\r\ntype PaginatorPropsType = {\r\n  totalPages: number;\r\n  pagesCount: number;\r\n  currentPage: number;\r\n  minPagination: number;\r\n  maxPagination: number;\r\n};\r\n\r\nconst Paginator: React.FC<PaginatorPropsType> = (props) => {\r\n  \r\n  const dispatch: ThunkDispatch<AppStateType, void, FindUserActionsTypes> = useDispatch()\r\n  let pages: Array<number> = [];\r\n  for (let i = props.minPagination; i <= props.maxPagination; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let currentPagination: Array<JSX.Element> = pages\r\n    .slice(0, props.totalPages - 1)\r\n    .map((p) => (\r\n      <span\r\n        key={p}\r\n        onClick={() => dispatch(actions.changePage(p))}\r\n        className={p === props.currentPage ? classes.selected : \"\"}\r\n      >\r\n        {p}\r\n      </span>\r\n    ));\r\n\r\n  return (\r\n    <div className={classes.pagination}>\r\n      {currentPagination}\r\n\r\n      {props.totalPages > 10 ? (\r\n        <span\r\n          onClick={() => {\r\n\r\n            dispatch(actions.changePagination(\r\n              props.minPagination + 10,\r\n              props.maxPagination + 10\r\n            ));\r\n          }}\r\n        >\r\n          ...\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <span\r\n        onClick={() => {\r\n          dispatch(actions.changePage(props.totalPages));\r\n        }}\r\n        className={\r\n          props.totalPages === props.currentPage ? classes.selected : \"\"\r\n        }\r\n      >\r\n        {props.totalPages}\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport FindUser from \"./FindUser.tsx\";\r\nimport React, { useEffect } from \"react\";\r\nimport classes from \"./FindUser.module.css\";\r\nimport { getUsers, FindUserActionsTypes } from \"../../redux/findUserReducer.ts\";\r\nimport Preloader from \"../UI/Preloader/Preloader.jsx\";\r\nimport Paginator from \"../UI/Paginator/Paginator.tsx\";\r\nimport { AppStateType } from \"../../redux/storeRedux.ts\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nconst FindUsersPage: React.FC = () => {\r\n  const pagesCount = useSelector((s: AppStateType) => s.findUser.pagesCount);\r\n  const isFetching = useSelector((s: AppStateType) => s.findUser.isFetching);\r\n  const term = useSelector((s: AppStateType) => s.findUser.term);\r\n  const pageSize = useSelector((s: AppStateType) => s.findUser.pageSize);\r\n  let currentPage = useSelector((s: AppStateType) => s.findUser.currentPage);\r\n  const minPagination = useSelector(\r\n    (s: AppStateType) => s.findUser.minPagination\r\n  );\r\n  const friend = useSelector((s: AppStateType) => s.findUser.friend);\r\n  const maxPagination = useSelector(\r\n    (s: AppStateType) => s.findUser.maxPagination\r\n  );\r\n\r\n  const dispatch: ThunkDispatch<AppStateType, void, FindUserActionsTypes> =\r\n    useDispatch();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    params.set(\"page\", String(currentPage));\r\n    params.set(\"term\", term || '');\r\n    params.set(\"friend\", friend ? \"true\" : \"false\");\r\n\r\n    navigate(`${location.pathname}?${params.toString()}`);\r\n  }, [currentPage, friend, term]);\r\n  useEffect(() => {\r\n    const params = new URLSearchParams(location.search);\r\n    const paramsObject = Object.fromEntries(params.entries());\r\n\r\n    const newTerm = paramsObject.term ?? \"\";\r\n    let newPage = currentPage;\r\n    const newFriend = paramsObject.friend === \"true\";\r\n\r\n    if (!!paramsObject.page) newPage = Number(paramsObject.page);\r\n\r\n    navigate(`${location.pathname}?${params.toString()}`);\r\n\r\n    dispatch(getUsers(pageSize, newPage, newTerm, newFriend));\r\n  }, [location.search]);\r\n\r\n  return (\r\n    <div className={classes.content}>\r\n      {isFetching ? (\r\n        <Preloader />\r\n      ) : (\r\n        <div>\r\n          <FindUser />\r\n          <Paginator\r\n            currentPage={currentPage}\r\n            totalPages={pagesCount}\r\n            minPagination={minPagination}\r\n            maxPagination={maxPagination}\r\n            pagesCount={pagesCount}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FindUsersPage;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MyButton\":\"MyButton_MyButton__CeT00\"};","import React from \"react\";\r\nimport classes from \"./MyButton.module.css\";\r\n\r\ntype MyButtonProps =   {\r\n  name: string\r\n} & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n\r\nconst MyButton: React.FC<MyButtonProps> = (props) => {\r\n  return (\r\n    <button className={classes.MyButton} {...props}>\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MyButton;","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"MyInput_input__537b-\",\"error\":\"MyInput_error__klO6M\"};","import React, { forwardRef } from \"react\";\r\nimport classes from \"./MyInput.module.css\";\r\n\r\ntype InputProps = {\r\n  holder: string\r\n  iserror: string | undefined\r\n} & React.InputHTMLAttributes<HTMLInputElement>\r\n\r\nconst MyInput = forwardRef<HTMLInputElement, InputProps>(({holder, ...props}, ref) => {\r\n\r\n  return (\r\n    <input\r\n    ref={ref}\r\n    className={`${classes.input} ${props.iserror ? classes.error : ''}`}\r\n    {...props}\r\n    placeholder={holder}\r\n    />\r\n  );\r\n});\r\n\r\nexport default MyInput;\r\n"],"names":["props","dispatch","useDispatch","_jsxs","className","classes","children","_jsx","src","logo","followed","isLogined","MyButton","disabled","followingInProgress","some","id","onClick","unfollow","name","follow","NavLink","to","FindUser","useSelector","s","login","findUser","term","friend","users","map","user","User","photos","small","register","handleSubmit","useForm","defaultValues","navigate","useNavigate","onSubmit","data","actions","setFilter","MyInput","iserror","undefined","holder","autoComplete","type","pages","i","minPagination","maxPagination","push","currentPagination","slice","totalPages","p","changePage","currentPage","changePagination","FindUsersPage","pagesCount","isFetching","pageSize","location","useLocation","useEffect","params","URLSearchParams","search","set","String","pathname","toString","_paramsObject$term","paramsObject","Object","fromEntries","entries","newTerm","newPage","newFriend","page","Number","getUsers","Preloader","Paginator","forwardRef","_ref","ref","placeholder"],"sourceRoot":""}