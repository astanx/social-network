{"version":3,"file":"static/js/712.5068235b.chunk.js","mappings":"iKACA,QAA0B,uBAA1B,EAA8D,0BAA9D,EAA+F,oBAA/F,EAA6H,uB,iECgH7H,SAAeA,EAAAA,EAAAA,KAPQC,IACd,CACLC,UAAWD,EAAME,MAAMD,UACvBE,QAASH,EAAME,MAAMC,WAIe,CAAEC,KAAI,KAAEC,WAAU,KAAEH,MAAM,MAAlE,EAnFyCI,IACvC,MAAMC,GAAWC,EAAAA,EAAAA,OAEVC,EAAOC,IAAYC,EAAAA,EAAAA,eAA6BC,IAChDT,EAASU,IAAcF,EAAAA,EAAAA,WAAS,IACjC,SACJG,EAAQ,aACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAwB,CAAC,IAE7BC,EAAAA,EAAAA,YAAU,KACJb,EAAML,WACRM,EAAS,WACX,GACC,CAACD,EAAML,UAAWM,IAwBrB,OALAY,EAAAA,EAAAA,YAAU,MACJF,EAAOG,OAASH,EAAOI,WACzBX,EAAS,OACX,GACC,CAACO,KAEFK,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJH,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAcG,SAAUZ,GAzB7Ba,IACdtB,EAAMJ,MAAM0B,GAAMC,MAAMC,IAClBA,EAASF,KAAKG,aAAeC,EAAAA,GAAWC,kBAC1CpB,GAAW,GACXP,EAAMD,aACNK,EAAS,SAEPoB,EAASF,KAAKG,aAAeC,EAAAA,GAAWE,OAC1CxB,EAAS,QAEPoB,EAASF,KAAKG,aAAeC,EAAAA,GAAWG,UAC1C5B,EAAS,YACTD,EAAMF,OACR,GACA,IAW8DqB,SAAA,EAC5DC,EAAAA,EAAAA,KAACU,EAAAA,EAAO,CACNC,KAAK,QACLC,OAAO,WACHxB,EAAS,QAAS,CAAEyB,UAAU,IAClCC,QAAS/B,KAEXiB,EAAAA,EAAAA,KAACU,EAAAA,EAAO,CACNC,KAAK,WACLC,OAAO,cACHxB,EAAS,WAAY,CAAEyB,UAAU,IACrCC,QAAS/B,KAEXa,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,SAAOW,KAAK,WAAWI,GAAG,gBAC1Bf,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBAERtB,GACCmB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,OAAKgB,IAAKpC,EAAMH,WAChBuB,EAAAA,EAAAA,KAACU,EAAAA,EAAO,CACNI,aAAS5B,EACT0B,OAAO,aACHxB,EAAS,UAAW,CAAEyB,UAAU,SAGtC,MAEJb,EAAAA,EAAAA,KAACiB,EAAAA,EAAQ,CAACC,KAAK,gBAEb,G,uCCrGV,QAA2B,2B,aCM3B,MAQA,EAR2CtC,IAEvCoB,EAAAA,EAAAA,KAAA,UAAQH,UAAWC,KAAsBlB,EAAKmB,SAC3CnB,EAAMsC,M,6CCTb,QAAwB,uBAAxB,EAAuD,uB,aCOvD,MAYA,GAZgBC,EAAAA,EAAAA,aAAyC,CAAAC,EAAqBC,KAAS,IAA7B,OAACT,KAAWhC,GAAMwC,EAE1E,OACEpB,EAAAA,EAAAA,KAAA,SACAqB,IAAKA,EACLxB,UAAW,GAAGC,KAAiBlB,EAAMkC,QAAUhB,EAAgB,QAC3DlB,EACJ0C,YAAaV,GACX,G","sources":["webpack://social_network/./src/components/Login/Login.module.css?3530","components/Login/Login.tsx","webpack://social_network/./src/components/UI/Button/MyButton.module.css?d4f4","components/UI/Button/MyButton.tsx","webpack://social_network/./src/components/UI/Input/MyInput.module.css?18b8","components/UI/Input/MyInput.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Login_content__Or5pz\",\"rememberMe\":\"Login_rememberMe__q-h5T\",\"form\":\"Login_form__csKgm\",\"captcha\":\"Login_captcha__VnIl7\"};","import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport classes from \"./Login.module.css\";\r\nimport MyInput from \"../UI/Input/MyInput.tsx\";\r\nimport MyButton from \"../UI/Button/MyButton.tsx\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { auth, getCaptcha, login } from \"../../redux/loginReducer.ts\";\r\nimport { ResultCode } from \"../../api/api.ts\";\r\n\r\ntype FormValuesType = {\r\n  email: string;\r\n  password: string;\r\n  captcha: string;\r\n  rememberMe: boolean;\r\n};\r\n\r\ntype LoginPropsType = {\r\n  isLogined: boolean;\r\n  captcha: string | undefined;\r\n  login: (data: {\r\n    email: string;\r\n    password: string;\r\n    rememberMe: boolean;\r\n    captcha: string | null;\r\n  }) => any;\r\n  getCaptcha: () => void;\r\n  auth: () => void;\r\n};\r\n\r\nconst Login: React.FC<LoginPropsType> = (props) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [error, setError] = useState<undefined | string>(undefined);\r\n  const [captcha, setCaptcha] = useState(false);\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<FormValuesType>({});\r\n\r\n  useEffect(() => {\r\n    if (props.isLogined) {\r\n      navigate(\"/profile\");\r\n    }\r\n  }, [props.isLogined, navigate]);\r\n\r\n  const submit = (data) => {\r\n    props.login(data).then((response) => {\r\n      if (response.data.resultCode === ResultCode.RequiredCaptcha) {\r\n        setCaptcha(true);\r\n        props.getCaptcha();\r\n        setError(\"true\");\r\n      }\r\n      if (response.data.resultCode === ResultCode.Error) {\r\n        setError(\"true\");\r\n      }\r\n      if (response.data.resultCode === ResultCode.Success) {\r\n        navigate(\"/profile\");\r\n        props.auth();\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (errors.email || errors.password) {\r\n      setError(\"true\");\r\n    }\r\n  }, [errors]);\r\n  return (\r\n    <div className={classes.content}>\r\n      <h3>Login</h3>\r\n      <form className={classes.form} onSubmit={handleSubmit(submit)}>\r\n        <MyInput\r\n          type=\"email\"\r\n          holder=\"Email\"\r\n          {...register(\"email\", { required: true })}\r\n          iserror={error}\r\n        />\r\n        <MyInput\r\n          type=\"password\"\r\n          holder=\"Password\"\r\n          {...register(\"password\", { required: true })}\r\n          iserror={error}\r\n        />\r\n        <div className={classes.rememberMe}>\r\n          <input type=\"checkbox\" id=\"rememberMe\" />\r\n          <label>Remember me</label>\r\n        </div>\r\n        {captcha ? (\r\n          <div className={classes.captcha}>\r\n            <img src={props.captcha} />\r\n            <MyInput\r\n              iserror={undefined}\r\n              holder=\"Captcha\"\r\n              {...register(\"captcha\", { required: true })}\r\n            />\r\n          </div>\r\n        ) : null}\r\n\r\n        <MyButton name=\"Submit\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isLogined: state.login.isLogined,\r\n    captcha: state.login.captcha,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { auth, getCaptcha, login })(Login);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MyButton\":\"MyButton_MyButton__CeT00\"};","import React from \"react\";\r\nimport classes from \"./MyButton.module.css\";\r\n\r\ntype MyButtonProps =   {\r\n  name: string\r\n} & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n\r\nconst MyButton: React.FC<MyButtonProps> = (props) => {\r\n  return (\r\n    <button className={classes.MyButton} {...props}>\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MyButton;","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"MyInput_input__537b-\",\"error\":\"MyInput_error__klO6M\"};","import React, { forwardRef } from \"react\";\r\nimport classes from \"./MyInput.module.css\";\r\n\r\ntype InputProps = {\r\n  holder: string\r\n  iserror: string | undefined\r\n} & React.InputHTMLAttributes<HTMLInputElement>\r\n\r\nconst MyInput = forwardRef<HTMLInputElement, InputProps>(({holder, ...props}, ref) => {\r\n\r\n  return (\r\n    <input\r\n    ref={ref}\r\n    className={`${classes.input} ${props.iserror ? classes.error : ''}`}\r\n    {...props}\r\n    placeholder={holder}\r\n    />\r\n  );\r\n});\r\n\r\nexport default MyInput;\r\n"],"names":["connect","state","isLogined","login","captcha","auth","getCaptcha","props","navigate","useNavigate","error","setError","useState","undefined","setCaptcha","register","handleSubmit","formState","errors","useForm","useEffect","email","password","_jsxs","className","classes","children","_jsx","onSubmit","data","then","response","resultCode","ResultCode","RequiredCaptcha","Error","Success","MyInput","type","holder","required","iserror","id","src","MyButton","name","forwardRef","_ref","ref","placeholder"],"sourceRoot":""}