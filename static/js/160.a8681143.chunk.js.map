{"version":3,"file":"static/js/160.a8681143.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Profile/MyProfile.module.css?4676","webpack://social_network/./src/components/Profile/MyUser/MyUser.module.css?11a4","components/Profile/MyUser/MyUser.tsx","webpack://social_network/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/getTime.js","components/Profile/MyPosts/Post/Post.tsx","webpack://social_network/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/CreatePost/CreatePost.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/Profile.tsx","components/Profile/ProfilePage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyProfile_content__YaKMV\",\"preloader\":\"MyProfile_preloader__S+0pm\"};","// extracted by mini-css-extract-plugin\nexport default {\"Description\":\"MyUser_Description__FMa2+\",\"start_dialog\":\"MyUser_start_dialog__iqMqt\",\"logo\":\"MyUser_logo__oDBy1\",\"Info\":\"MyUser_Info__KyYZ4\",\"contact\":\"MyUser_contact__g3MT9\",\"contactHrefs\":\"MyUser_contactHrefs__hTHTF\",\"file_input_wrapper\":\"MyUser_file_input_wrapper__rwsR0\",\"file_input\":\"MyUser_file_input__uF9yt\",\"file_label\":\"MyUser_file_label__WDAC-\",\"img_input_wrapper\":\"MyUser_img_input_wrapper__7w185\"};","import React, { useState } from \"react\";\r\nimport MyInput from \"../../UI/Input/MyInput.tsx\";\r\nimport logo from \"./../../UI/Images/logo.png\";\r\nimport classes from \"./MyUser.module.css\";\r\nimport github from \"./../../UI/Images/github.png\";\r\nimport MyButton from \"../../UI/Button/MyButton.tsx\";\r\nimport { NavLink, useParams } from \"react-router-dom\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport messages from \"./../../UI/Images/messages.png\";\r\nimport { UserProfileType } from \"../../../redux/types/types.ts\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../../redux/storeRedux.ts\";\r\nimport { ProfileActionsTypes } from \"../../../redux/profileReducer.ts\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst MyUser: React.FC<any> = (props) => {\r\n \r\n  const [isEditing, setIsEditing] = useState(false);\r\n  return isEditing && props.isMyUser ? (\r\n    <ChangeProfile\r\n      {...props}\r\n      isEditing={isEditing}\r\n      setIsEditing={setIsEditing}\r\n\r\n    />\r\n  ) : (\r\n    <ProfileData {...props}  isEditing={isEditing} setIsEditing={setIsEditing} />\r\n  );\r\n};\r\n\r\ntype EditingProps = {\r\n  setIsEditing: (isEditing: boolean) => void;\r\n  isEditing: boolean;\r\n};\r\n\r\ntype ProfileDataProps = {\r\n  userProfile: UserProfileType | null;\r\n  createDialog: (id: number) => void;\r\n  photo: null | string;\r\n  id: number | null;\r\n  status: string | null;\r\n  isMyUser: boolean\r\n  login: string | null\r\n};\r\n\r\nconst ProfileData: React.FC<ProfileDataProps & EditingProps> = ({\r\n  setIsEditing,\r\n  isEditing,\r\n  ...props\r\n}) => {\r\n  const { userId } = useParams();\r\n  const dispatch: ThunkDispatch<AppStateType, void, ProfileActionsTypes> = useDispatch()\r\n  const normalizeUrl = (url) => {\r\n    if (!/^https?:\\/\\//i.test(url)) {\r\n      return `https://${url}`;\r\n    }\r\n    return url;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.Info}>\r\n      <div className={classes.contact}>\r\n        <img\r\n          src={\r\n            props.id && props.photo\r\n              ? props.photo\r\n              : props.userProfile?.photos.small\r\n              ? props.userProfile.photos.small\r\n              : logo\r\n          }\r\n          className={classes.logo}\r\n        />\r\n        {!props.isMyUser ? (\r\n          <NavLink to={`/messages/${userId}`}>\r\n            {\" \"}\r\n            <img\r\n              src={messages}\r\n              className={classes.start_dialog}\r\n              onClick={() => {\r\n                dispatch(props.createDialog(Number(userId)));\r\n              }}\r\n            />{\" \"}\r\n          </NavLink>\r\n        ) : (\r\n          <button onClick={() => setIsEditing(true)}>edit</button>\r\n        )}\r\n        <div className={classes.contactHrefs}>\r\n          {props.userProfile?.contacts.github ? (\r\n            <a href={normalizeUrl(props.userProfile.contacts.github)}>\r\n              <img src={github} />\r\n            </a>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.Description}>\r\n        <div>\r\n          <span>Name: </span>\r\n          <span>{props.login || props.userProfile?.fullName}</span>\r\n        </div>\r\n\r\n        {props.userProfile?.aboutMe ? (\r\n          <div>\r\n            <span>About: </span>\r\n            <span>{props.userProfile.aboutMe}</span>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div>\r\n          <span>Job: </span>\r\n          <span>{props.userProfile?.lookingForAJob ? \"looking\" : \"have\"}</span>\r\n        </div>\r\n        {props.userProfile?.lookingForAJobDescription ? (\r\n          <div>\r\n            <span>Job Description: </span>\r\n            <span>{props.userProfile.lookingForAJobDescription}</span>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <span>{props.status}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ChangeProfileProps = {\r\n  userProfile: UserProfileType | null;\r\n  setPhoto: (file: string) => void;\r\n  updateStatus: (status: string) => void;\r\n  changeProfile: (data: any, userId: number) => void;\r\n  photo: string | null;\r\n  id: number | null;\r\n  login: string | null\r\n  status: string | null;\r\n};\r\ntype FormValues = {\r\n  FullName: string;\r\n  AboutMe: string | null;\r\n  LookingForAJobDescription: string;\r\n  Status: string | null;\r\n  lookingForAJob: boolean;\r\n  github: string | null;\r\n  image: string | FileList;\r\n};\r\n\r\nconst ChangeProfile: React.FC<ChangeProfileProps & EditingProps> = ({\r\n  setIsEditing,\r\n  isEditing,\r\n  ...props\r\n}) => {\r\n  const { userId } = useParams();\r\n  const dispatch: ThunkDispatch<AppStateType, void, ProfileActionsTypes> = useDispatch()\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm<FormValues>({\r\n    defaultValues: {\r\n      FullName: props.login || props.userProfile?.fullName,\r\n      AboutMe: props.userProfile?.aboutMe,\r\n      LookingForAJobDescription: props.userProfile?.lookingForAJobDescription,\r\n      Status: props.status,\r\n      lookingForAJob: props.userProfile?.lookingForAJob,\r\n      github: props.userProfile?.contacts.github,\r\n    },\r\n  });\r\n\r\n  const submit = (data) => {\r\n    data[\"contacts\"] = { github: data.github };\r\n\r\n    if (data.image[0]) {\r\n      dispatch(props.setPhoto(data.image[0]));\r\n    }\r\n    dispatch( props.updateStatus(data.Status));\r\n    dispatch(props.changeProfile(\r\n      data,\r\n      Number(userId) ? Number(userId) : Number(props.id)\r\n    ))\r\n    reset();\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className={classes.Info}>\r\n      <div className={classes.img_input_wrapper}>\r\n        <img\r\n          src={\r\n            props.id && props.photo\r\n              ? props.photo\r\n              : props.userProfile?.photos.small\r\n              ? props.userProfile?.photos.small\r\n              : logo\r\n          }\r\n          className={classes.logo}\r\n          alt=\"Profile\"\r\n        />\r\n        <div className={classes.file_input_wrapper}>\r\n          <input\r\n            type=\"file\"\r\n            placeholder=\"image url\"\r\n            className={classes.file_input}\r\n            {...register(\"image\")}\r\n          />\r\n          <span className={classes.file_label}>Choose Image</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className={classes.Description}>\r\n        <div>\r\n          <span>Name: </span>\r\n          <MyInput\r\n            iserror={undefined}\r\n            holder=\"Name (required)\"\r\n            {...register(\"FullName\", { required: true })}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <span>About: </span>\r\n          <MyInput\r\n            iserror={undefined}\r\n            holder=\"About (required)\"\r\n            {...register(\"AboutMe\", { required: true })}\r\n          />\r\n        </div>\r\n        <div>\r\n          <span>Looking for a Job: </span>\r\n          <input type=\"checkbox\" {...register(\"lookingForAJob\")} />\r\n        </div>\r\n        <div>\r\n          <span>Job Description: </span>\r\n          <MyInput\r\n            iserror={undefined}\r\n            {...register(\"LookingForAJobDescription\", { required: true })}\r\n            holder=\"Job Description (required)\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <span>Status: </span>\r\n          <MyInput\r\n            iserror={undefined}\r\n            {...register(\"Status\")}\r\n            holder=\"Status\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <span>Github Page: </span>\r\n          <MyInput\r\n            iserror={undefined}\r\n            holder=\"github page\"\r\n            {...register(\"github\")}\r\n          />\r\n        </div>\r\n        <MyButton\r\n          style={{ width: \"200px\", alignSelf: \"center\" }}\r\n          type=\"submit\"\r\n          name=\"Save\"\r\n        />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default MyUser;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"Post\":\"Post_Post__80HbP\",\"deletePost\":\"Post_deletePost__4rtr6\"};","const getTime = () => {\r\n  const hours = new Date().getHours().toString().padStart(2, \"0\");\r\n  const minutes = new Date().getMinutes().toString().padStart(2, \"0\");\r\n  return `${hours}:${minutes}`;\r\n};\r\nexport default getTime;\r\n","import React from \"react\";\r\nimport classes from \"./Post.module.css\";\r\nimport UserMessage from \"../../../UserMessage/UserMessage.tsx\";\r\nimport logo from \"./../../../UI/Images/logo.png\";\r\nimport getTime from \"../getTime.js\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../../../redux/storeRedux.ts\";\r\nimport { ProfileActionsTypes } from \"../../../../redux/profileReducer.ts\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Post = (props) => {\r\n  const dispatch: ThunkDispatch<AppStateType, void, ProfileActionsTypes> = useDispatch()\r\n\r\n  return (\r\n    <div className={classes.Post}>\r\n      <UserMessage\r\n        message={props.message}\r\n        name={props.name}\r\n        logo={props.logo ? props.logo : logo}\r\n        time={getTime()}\r\n        id={props.id} getDialog={function (id: number): void {\r\n          throw new Error(\"Function not implemented.\");\r\n        } }    />\r\n      {props.isMyUser ? <span className={classes.deletePost} onClick={() => {dispatch(props.deletePost(props.id))}}>X</span>: null } \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MyPosts\":\"MyPosts_MyPosts__ZTdRm\"};","import React, { useState, useRef } from \"react\";\r\nimport classes from \"./CreatePost.module.css\";\r\nimport MyButton from \"../../../UI/Button/MyButton.tsx\";\r\nimport MyInput from \"../../../UI/Input/MyInput.tsx\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ThunkDispatch } from 'redux-thunk';\r\nimport { AppStateType } from \"../../../../redux/storeRedux.ts\";\r\nimport { ProfileActionsTypes } from \"../../../../redux/profileReducer.ts\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n\r\nconst CreatePost = (props) => {\r\n  const dispatch: ThunkDispatch<AppStateType, void, ProfileActionsTypes> = useDispatch()\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({});\r\n\r\n  const submit = (data) => {\r\n    if (data.postText.trim() !== \"\") {\r\n      dispatch(props.addPost(props.name, data.postText));\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)}>\r\n      <MyInput iserror={undefined} holder=\"Post\" {...register(\"postText\", { required: true })} autoComplete=\"off\" />\r\n      <MyButton name=\"Create Post\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","import React from \"react\";\r\nimport Post from \"./Post/Post.tsx\";\r\nimport classes from \"./MyPosts.module.css\";\r\nimport CreatePost from \"./CreatePost/CreatePost.tsx\";\r\nimport { NewPostType } from \"../../../redux/types/types\";\r\n\r\n\r\n\r\ntype MyPostsPropsType = {\r\n  isMyUser: boolean;\r\n  PostData: Array<NewPostType>\r\n\r\n  id: number | null \r\n  userName: string | undefined\r\n\r\n  logo: string | null | undefined\r\n  \r\n  addPost: (name: string , text: string) => void\r\n  deletePost: (id: number) => void\r\n}\r\n\r\n\r\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\r\n  const Posts = props.PostData.map((post) => (\r\n    <Post\r\n    isMyUser={props.isMyUser}\r\n      userId = {props.id}\r\n      deletePost={props.deletePost}\r\n      message={post.message}\r\n      name={post.name}\r\n      logo={props.logo}\r\n      time={post.time}\r\n      id={post.id}\r\n      key={post.id}\r\n    />\r\n  ));\r\n  return (\r\n    <div className={classes.MyPosts}>\r\n      <h4>My posts</h4>\r\n      { props.isMyUser  ? <CreatePost\r\n        name={props.userName}\r\n        addPost={props.addPost}\r\n      /> : null}\r\n      {Posts}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport classes from \"./MyProfile.module.css\";\r\nimport MyUser from \"./MyUser/MyUser.tsx\";\r\nimport MyPosts from \"./MyPosts/MyPosts.tsx\";\r\nimport { ProfilePropsType } from \"../../redux/types/types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../redux/storeRedux.ts\";\r\nimport {\r\n  actions,\r\n  setPhoto,\r\n  updateStatus,\r\n  changeProfile,\r\n  \r\n} from \"../../redux/profileReducer.ts\";\r\nimport {\r\n  createDialog\r\n} from \"../../redux/messagesReducer.ts\";\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n  const addPost = actions.addPost\r\n  const deletePost = actions.deletePost\r\n  const status = useSelector((s: AppStateType) => s.profile.status)\r\n  const postData = useSelector((s: AppStateType) => s.profile.PostData)\r\n  const photo = useSelector((s: AppStateType) => s.profile.photo)\r\n  const login = useSelector((s: AppStateType) => s.profile.login)\r\n  return (\r\n    <div className={classes.content}>\r\n      <MyUser\r\n      login={login}\r\n        isMyUser={props.isMyUser}\r\n        setPhoto={setPhoto}\r\n        createDialog={createDialog}\r\n        updateStatus={updateStatus}\r\n        status={status}\r\n        photo={photo}\r\n        id={props.userId}\r\n        userProfile={props.userProfile}\r\n        changeProfile={changeProfile}\r\n      />\r\n      <MyPosts\r\n      isMyUser={props.isMyUser}\r\n        deletePost={deletePost}\r\n        id={props.userId}\r\n        logo={props.userProfile?.photos?.small}\r\n        userName={props.userProfile?.fullName}\r\n        PostData={postData}\r\n        addPost={addPost}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  ProfileActionsTypes,\r\n  getProfile,\r\n} from \"../../redux/profileReducer.ts\";\r\nimport Profile from \"./Profile.tsx\";\r\nimport React, { useEffect } from \"react\";\r\nimport classes from \"./MyProfile.module.css\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Preloader from \"../UI/Preloader/Preloader.jsx\";\r\nimport { ProfilePropsType } from \"../../redux/types/types.ts\";\r\nimport { AppStateType } from \"../../redux/storeRedux.ts\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport withAuth from \"../hoc/withAuth.tsx\";\r\n\r\n\r\nconst ProfilePage: React.FC<ProfilePropsType> = () => {\r\n  const { userId } = useParams<{ userId: string }>();\r\n  const myUserId = useSelector((s: AppStateType)=> s.login.userId)\r\n  const dispatch: ThunkDispatch<AppStateType, void, ProfileActionsTypes> = useDispatch()\r\n  const isFetching = useSelector((s: AppStateType) => s.profile.isFetching)\r\n  const status = useSelector((s: AppStateType) => s.profile.status)\r\n  const userProfile = useSelector((s: AppStateType)=> s.profile.userProfile)\r\n  const idToFetch = Number(userId ? userId : myUserId)\r\n  useEffect(() => {\r\n    if (idToFetch){\r\n      dispatch(getProfile(idToFetch));\r\n    }\r\n    \r\n  }, [idToFetch]);\r\n  const isMyUser = userId ? false : true\r\n  return (\r\n    <div className={classes.content}>\r\n      {isFetching ? (\r\n        <Preloader />\r\n      ) : userProfile ? (\r\n        <Profile\r\n          isMyUser = {isMyUser}\r\n          status={status}\r\n          userProfile={userProfile}\r\n\r\n        />\r\n      ) : (\r\n        \"User is not available\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default withAuth (ProfilePage);\r\n\r\n\r\n"],"names":["ProfileData","_ref","_props$userProfile","_props$userProfile2","_props$userProfile3","_props$userProfile4","_props$userProfile5","_props$userProfile6","setIsEditing","isEditing","props","userId","useParams","dispatch","useDispatch","_jsxs","className","classes","children","_jsx","src","id","photo","userProfile","photos","small","logo","isMyUser","onClick","NavLink","to","messages","createDialog","Number","contacts","github","href","url","test","login","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","status","ChangeProfile","_ref2","_props$userProfile7","_props$userProfile8","_props$userProfile9","_props$userProfile10","_props$userProfile11","_props$userProfile12","_props$userProfile13","register","handleSubmit","reset","formState","errors","useForm","defaultValues","FullName","AboutMe","LookingForAJobDescription","Status","onSubmit","data","image","setPhoto","updateStatus","changeProfile","alt","type","placeholder","MyInput","iserror","undefined","holder","required","MyButton","style","width","alignSelf","name","useState","getTime","Date","getHours","toString","padStart","getMinutes","UserMessage","message","time","getDialog","Error","deletePost","postText","trim","addPost","autoComplete","Posts","PostData","map","post","Post","CreatePost","userName","_props$userProfile$ph","actions","useSelector","s","profile","postData","MyUser","MyPosts","withAuth","ProfilePage","myUserId","isFetching","idToFetch","useEffect","getProfile","Preloader","Profile"],"sourceRoot":""}