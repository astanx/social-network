{"version":3,"file":"static/js/821.142744b2.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Messages/Messages.module.css?8e7e","webpack://social_network/./src/components/Messages/MessageList/MessageList.module.css?ae33","components/Messages/MessageList/MessageList.jsx","components/Messages/Dialog/Dialog.module.css","webpack://social_network/./src/components/Messages/Dialog/SendMessage/SendMessage.module.css?3cb9","components/Messages/Dialog/SendMessage/SendMessage.jsx","components/Messages/Dialog/Dialog.jsx","components/Messages/Messages.jsx","components/Messages/MessagesContainer.jsx","webpack://social_network/./src/components/UI/Button/MyButton.module.css?d4f4","components/UI/Button/MyButton.jsx","webpack://social_network/./src/components/UI/Input/MyInput.module.css?18b8","components/UI/Input/MyInput.jsx","webpack://social_network/./src/components/UserMessage/UserMessage.module.css?d361","components/UserMessage/UserMessage.jsx","components/hoc/withAuth.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Messages_content__wNDBY\",\"active\":\"Messages_active__pElvi\"};","// extracted by mini-css-extract-plugin\nexport default {\"MessageList\":\"MessageList_MessageList__LxXPb\"};","import React from \"react\";\r\nimport classes from \"./MessageList.module.css\";\r\nimport UserMessage from \"../../UserMessage/UserMessage\";\r\n\r\nimport logo from './../../UI/Images/logo.png'\r\n\r\nconst MessageList = (props) => {\r\n  const Messsages = props.MessagesData.map((message) => (\r\n    <UserMessage\r\n      getDialog={props.getDialog}\r\n      link={\"true\"}\r\n      name={message.userName}\r\n      logo={message.photos.small ? message.photos.small : logo}\r\n      id={message.id}\r\n      key={message.id}\r\n    \r\n    />\r\n  ));\r\n  return <div className={classes.MessageList}>{Messsages}</div>;\r\n};\r\n\r\nexport default MessageList;\r\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"SendMessage\":\"SendMessage_SendMessage__Yz56f\"};","import React, { useState } from \"react\";\r\nimport classes from \"./SendMessage.module.css\";\r\nimport MyInput from \"../../../UI/Input/MyInput\";\r\nimport MyButton from \"../../../UI/Button/MyButton\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\n\r\nconst SendMessage = (props) => {\r\n  \r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({});\r\n\r\n  const submit = (data) => {\r\n    if (data.messageText.trim() !== \"\") {\r\n      props.sendMessage(props.friendId, data.messageText);      \r\n      reset()\r\n    }\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className={classes.SendMessage}>\r\n      <MyInput\r\n        holder=\"Message\"\r\n        {...register('messageText', { required: true })}\r\n        autoComplete=\"off\"\r\n      />\r\n      <MyButton\r\n        name=\"Send\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n","import React from \"react\";\r\nimport classes from \"./Dialog.module.css\";\r\nimport UserMessage from \"../../UserMessage/UserMessage\";\r\nimport SendMessage from \"./SendMessage/SendMessage\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/ru\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport logo from \"././../../UI/Images/logo.png\";\r\n\r\nconst Dialog = (props) => {\r\n\r\n  const moment = require('moment-timezone')\r\n  const { userId } = useParams();\r\n  const Dialog =\r\n    props.DialogData &&\r\n    props.DialogData.items &&\r\n    props.DialogData.items.length > 0\r\n      ? props.DialogData?.items.map((dialog) => (\r\n          <UserMessage\r\n            \r\n            viewed={dialog.viewed}\r\n            message={dialog.body}\r\n            name={dialog.senderName}\r\n            logo={logo}\r\n            id={dialog.senderId}\r\n            messageId={dialog.id}\r\n            key={dialog.id}\r\n            time={moment.utc(dialog.addedAt).tz('Europe/Moscow').format('YYYY-MM-DD HH:mm')}\r\n            deleteMessage={props.deleteMessage}\r\n          />\r\n        ))\r\n      : null;\r\n\r\n  return userId ? (\r\n    <div>\r\n      <div className={classes.message}>{Dialog}</div>\r\n      <SendMessage\r\n        friendId={userId}\r\n        login={props.login}\r\n        messageText={props.messageText}\r\n        sendMessage={props.sendMessage}\r\n      />\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Dialog;\r\n","import React, { useEffect } from \"react\";\r\nimport classes from \"./Messages.module.css\";\r\nimport MessageList from \"./MessageList/MessageList\";\r\nimport Dialog from \"./Dialog/Dialog\";\r\nimport Preloader from \"../UI/Preloader/Preloader\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Messages = (props) => {\r\n  const { userId } = useParams();\r\n  useEffect(() => {\r\n    props.getMessages();\r\n    if (userId) {\r\n      props.getDialog(userId);\r\n    }\r\n  }, [userId]);\r\n\r\n  return props.isFetching ? (\r\n    <Preloader />\r\n  ) : (\r\n    <div className={classes.content}>\r\n      <MessageList\r\n        getDialog={props.getDialog}\r\n        MessagesData={props.messagesData}\r\n      />\r\n      <Dialog\r\n        deleteMessage={props.deleteMessage}\r\n        login={props.login}\r\n        DialogData={props.dialogData}\r\n        sendMessage={props.sendMessage}\r\n        messageText={props.messageText}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Messages;\r\n","import { connect } from \"react-redux\";\r\nimport Messages from \"./Messages\";\r\nimport {\r\n  deleteMessage,\r\n  getDialog,\r\n  getMessages,\r\n  sendMessage,\r\n  \r\n} from \"../../redux/messagesReducer\";\r\nimport withAuth from \"../hoc/withAuth\";\r\nimport { compose } from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    messagesData: state.messages.MessagesData,\r\n    dialogData: state.messages.DialogData,\r\n    messageText: state.messages.messageText,\r\n    isLogined: state.login.isLogined,\r\n    login: state.login.login,\r\n    isFetching: state.messages.isFetching,\r\n  };\r\n};\r\n\r\nconst MessagesContainer = compose(\r\n  connect(mapStateToProps, { sendMessage, getMessages, getDialog, deleteMessage }),\r\n  withAuth\r\n)(Messages);\r\n\r\nexport default MessagesContainer;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"MyButton\":\"MyButton_MyButton__CeT00\"};","import React from \"react\";\r\nimport classes from \"./MyButton.module.css\";\r\n\r\nconst MyButton = (props) => {\r\n  return (\r\n    <button className={classes.MyButton} {...props}>\r\n      {props.name}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default MyButton;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"MyInput_input__537b-\",\"error\":\"MyInput_error__klO6M\"};","import React, { forwardRef } from \"react\";\r\nimport classes from \"./MyInput.module.css\";\r\n\r\nconst MyInput = forwardRef(({...props}, ref) => {\r\n\r\n  return (\r\n    <input\r\n    ref={ref}\r\n      className={`${classes.input} ${props.iserror ? classes.error : ''}`}\r\n      {...props}\r\n    placeholder={props.holder}\r\n    />\r\n  );\r\n});\r\n\r\nexport default MyInput;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"user\":\"UserMessage_user__bqMk4\",\"logo\":\"UserMessage_logo__4q0Z8\",\"delete\":\"UserMessage_delete__02DOw\",\"message\":\"UserMessage_message__AZf+w\",\"messageCont\":\"UserMessage_messageCont__0VPdE\",\"viewed\":\"UserMessage_viewed__xQiNt\",\"viewedStatus\":\"UserMessage_viewedStatus__hRTgS\",\"logoMessage\":\"UserMessage_logoMessage__kUGtV\"};","import React from \"react\";\r\nimport classes from \"./UserMessage.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport viewed from \"./../UI/Images/viewed.png\";\r\nimport sended from \"./../UI/Images/sended.png\";\r\n\r\nconst UserMessage = (props) => {\r\n  const User = () => (\r\n    <div className={classes.message}>\r\n      <img src={props.logo} className={classes.logoMessage} />\r\n      <div className={classes.user}>\r\n        <div>\r\n          <span>{props.name}</span>\r\n          <span>{props.time}</span>\r\n          {props.deleteMessage ? (\r\n        <span className={classes.delete} onClick={() => props.deleteMessage(props.messageId)}>X</span>\r\n      ) : null}\r\n        </div>\r\n        <p>{props.message}</p>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n  return props.link ? (\r\n    <NavLink\r\n      to={`/messages/${props.id}`}\r\n      onClick={() => {\r\n        props.getDialog(props.id);\r\n      }}\r\n    >\r\n      <User />\r\n    </NavLink>\r\n  ) : (\r\n    <div className={classes.messageCont}>\r\n      <User />\r\n      {props.messageId ? \r\n      <p className={classes.viewed}>\r\n        {props.viewed ? (\r\n          <img className={classes.viewedStatus} src={viewed} alt=\"viewed\" />\r\n        ) :(\r\n          <img className={classes.viewedStatus} src={sended} alt=\"sended\" />\r\n        )}\r\n      </p>: null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMessage;\r\n","import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst withAuth = (WrappedComponent) => {\r\n  let WithAuthComponent = (props) => {\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n      if (!props.isLogined) {\r\n        navigate(\"/login\");\r\n      }\r\n    }, [props.isLogined, navigate]);\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n  return WithAuthComponent;\r\n};\r\n\r\nexport default withAuth;\r\n"],"names":["props","Messsages","MessagesData","map","message","_jsx","UserMessage","getDialog","link","name","userName","logo","photos","small","id","className","classes","children","register","handleSubmit","reset","formState","errors","useForm","_jsxs","onSubmit","data","messageText","trim","sendMessage","friendId","MyInput","holder","required","autoComplete","MyButton","_props$DialogData","moment","require","userId","useParams","Dialog","DialogData","items","length","dialog","viewed","body","senderName","senderId","messageId","time","utc","addedAt","tz","format","deleteMessage","SendMessage","login","useEffect","getMessages","isFetching","Preloader","MessageList","messagesData","dialogData","compose","connect","state","messages","isLogined","withAuth","Messages","forwardRef","_ref","ref","iserror","placeholder","User","src","onClick","NavLink","to","alt","WrappedComponent","navigate","useNavigate"],"sourceRoot":""}