{"version":3,"file":"static/js/605.52246ea4.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/Messages/Dialog/SendMessage/SendMessage.module.css?3cb9","components/Messages/Dialog/SendMessage/SendMessage.tsx","components/UserMessage/UserMessage.tsx","components/hoc/withAuth.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"SendMessage\":\"SendMessage_SendMessage__Yz56f\"};","import React, { useState } from \"react\";\r\nimport classes from \"./SendMessage.module.css\";\r\n\r\nimport Button from \"@mui/material/Button\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport {\r\n  MessagesActionsTypes,\r\n  sendMessage,\r\n} from \"../../../../redux/messagesReducer.ts\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../../../redux/storeRedux.ts\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { sendMessageChat } from \"../../../../redux/chatReducer.ts\";\r\n\r\ntype FormValuesType = {\r\n  messageText: string;\r\n};\r\n\r\ntype SendMessagePropsType = {\r\n  friendId: number;\r\n  login: string | null;\r\n  ws: any;\r\n};\r\n\r\nconst SendMessage: React.FC<SendMessagePropsType> = (props) => {\r\n  const dispatch: ThunkDispatch<AppStateType, void, MessagesActionsTypes> =\r\n    useDispatch();\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm<FormValuesType>({});\r\n\r\n  const submit = (data) => {\r\n    if (props.ws) {\r\n      dispatch(sendMessageChat(data.messageText));\r\n      reset();\r\n    } else if (data.messageText.trim() !== \"\") {\r\n      dispatch(sendMessage(props.friendId, data.messageText));\r\n      reset();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(submit)} className={classes.SendMessage}>\r\n      <TextField\r\n        error={!!errors.messageText}\r\n        id=\"outlined-basic\"\r\n        label=\"Message\"\r\n        variant=\"filled\"\r\n        autoComplete=\"off\"\r\n        {...register(\"messageText\", { required: true })}\r\n      />\r\n      <Button\r\n        variant=\"contained\"\r\n        type=\"submit\"\r\n        disabled={false}\r\n      >\r\n        Send\r\n      </Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SendMessage;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Avatar, Card, CardContent, Typography, IconButton } from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport viewed from \"./../UI/Images/viewed.png\";\r\nimport sended from \"./../UI/Images/sended.png\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { ThunkDispatch } from \"redux-thunk\";\r\nimport { AppStateType } from \"../../redux/storeRedux\";\r\nimport {\r\n  deleteMessage,\r\n  getDialog,\r\n  MessagesActionsTypes,\r\n} from \"../../redux/messagesReducer.ts\";\r\n\r\ntype UserMessagePropsType = {\r\n  isDeletable: boolean;\r\n  logo: string;\r\n  name: string;\r\n  time?: string;\r\n  deleteMessage?: (id: number) => void;\r\n  messageId?: number | undefined;\r\n  message?: string;\r\n  link?: string;\r\n  id: number;\r\n  viewed?: boolean;\r\n};\r\n\r\nconst UserMessage: React.FC<UserMessagePropsType> = (props) => {\r\n  const messageId = props.messageId || 2;\r\n  const dispatch: ThunkDispatch<AppStateType, void, MessagesActionsTypes> = \r\n    useDispatch();\r\n\r\n  const User = () => (\r\n    <Card variant=\"outlined\" style={{ display: \"flex\", marginBottom: \"10px\" }}>\r\n      <Avatar src={props.logo} sx={{ width: 70, height: 70 }} />\r\n      <CardContent style={{ flex: \"1\" }}>\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <div>\r\n            <Typography variant=\"subtitle1\">{props.name}</Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">{props.time}</Typography>\r\n          </div>\r\n          {props.isDeletable && (\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => dispatch(deleteMessage(messageId))}\r\n            >\r\n              <DeleteIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          )}\r\n        </div>\r\n        <div style={{ display: \"flex\", alignItems: \"center\", marginTop: \"5px\" }}>\r\n          <Typography variant=\"body1\" style={{ flex: \"1\" }}>{props.message}</Typography>\r\n          {props.messageId && (\r\n            <img \r\n              style={{ width: \"20px\", marginLeft: \"10px\" }} \r\n              src={props.viewed ? viewed : sended} \r\n              alt={props.viewed ? \"viewed\" : \"sended\"} \r\n            />\r\n          )}\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n\r\n  return props.link ? (\r\n    <NavLink to={`/messages/${props.id}`} onClick={() => dispatch(getDialog(props.id))}>\r\n      <User />\r\n    </NavLink>\r\n  ) : (\r\n    <div>\r\n      <User />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserMessage;","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AppStateType } from \"../../redux/storeRedux\";\r\n\r\nconst withAuth = (WrappedComponent) => {\r\n  \r\n  let WithAuthComponent = (props) => {\r\n    const isLogined = useSelector((s: AppStateType) => s.login.isLogined)\r\n\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n      if (!isLogined) {\r\n        navigate(\"/login\");\r\n      }\r\n    }, [isLogined, navigate]);\r\n    return <WrappedComponent {...props} />;\r\n  };\r\n  return WithAuthComponent;\r\n};\r\n\r\nexport default withAuth;\r\n"],"names":["props","dispatch","useDispatch","register","handleSubmit","reset","formState","errors","useForm","_jsxs","onSubmit","data","ws","sendMessageChat","messageText","trim","sendMessage","friendId","className","classes","children","_jsx","TextField","error","id","label","variant","autoComplete","required","Button","type","disabled","messageId","User","Card","style","display","marginBottom","Avatar","src","logo","sx","width","height","CardContent","flex","justifyContent","Typography","name","color","time","isDeletable","IconButton","size","onClick","deleteMessage","DeleteIcon","fontSize","alignItems","marginTop","message","marginLeft","viewed","alt","link","NavLink","to","getDialog","WrappedComponent","isLogined","useSelector","s","login","navigate","useNavigate","useEffect"],"sourceRoot":""}